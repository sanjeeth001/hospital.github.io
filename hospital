USE [master]
GO
/****** Object:  Database [HMS]    Script Date: 26-Feb-15 1:38:02 PM ******/
CREATE DATABASE [HMS]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'HMS', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\HMS.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'HMS_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\HMS_log.ldf' , SIZE = 1280KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [HMS] SET COMPATIBILITY_LEVEL = 110
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [HMS].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [HMS] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [HMS] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [HMS] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [HMS] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [HMS] SET ARITHABORT OFF 
GO
ALTER DATABASE [HMS] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [HMS] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [HMS] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [HMS] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [HMS] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [HMS] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [HMS] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [HMS] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [HMS] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [HMS] SET  DISABLE_BROKER 
GO
ALTER DATABASE [HMS] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [HMS] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [HMS] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [HMS] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [HMS] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [HMS] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [HMS] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [HMS] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [HMS] SET  MULTI_USER 
GO
ALTER DATABASE [HMS] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [HMS] SET DB_CHAINING OFF 
GO
ALTER DATABASE [HMS] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [HMS] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
USE [HMS]
GO
/****** Object:  Table [dbo].[APPOINTMENT_INVOICE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[APPOINTMENT_INVOICE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NULL,
	[INVOICE_ID] [varchar](max) NOT NULL,
	[INVOICE_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_INVOICE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[APPOINTMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[APPOINTMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[DOCTOR_ID_FK] [int] NOT NULL,
	[APPOINTMENT_DATE] [datetime] NOT NULL,
	[APPOINTMENT_TIME] [datetime] NOT NULL,
	[BODY_PART_ID_FK] [int] NULL,
	[PROBLEM_DESCRIPTION] [varchar](max) NULL,
 CONSTRAINT [PK_APPOINTMENT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BANK_NAME_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BANK_NAME_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[BANK_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_BANK_NAME_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BODY_PART_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BODY_PART_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[BODY_PART] [varchar](max) NOT NULL,
 CONSTRAINT [PK_BODY_PART_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CASE_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CASE_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DOCTOR_FK] [int] NOT NULL,
	[PATIENT_FK] [int] NOT NULL,
	[CASE_START_DATE] [datetime] NOT NULL,
	[CASE_END_DATE] [datetime] NULL,
 CONSTRAINT [PK_CASE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[COUNTRY_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[COUNTRY_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[COUNTRY_CODE] [varchar](max) NOT NULL,
	[COUNTRY_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_COUNTRY_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DEPARTMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DEPARTMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SPECIALITY] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SPECIALITY_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOCTOR_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOCTOR_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[DOCTOR_LICENSE_NUMBER] [varchar](max) NOT NULL,
	[DOCTOR_DEPARTMENT_FK] [int] NOT NULL,
	[DOCTOR_DEGREE_FK] [int] NOT NULL,
	[DOCTOR_UNIVERSITY_NAME] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_CITY] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_STATE] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_COUNTRY] [varchar](max) NOT NULL,
	[DOCTOR_EXPERIENCE] [int] NOT NULL,
 CONSTRAINT [PK_DOCTOR_MASTER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_LEAVE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_LEAVE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[LEAVE_FROM_DATE] [datetime] NOT NULL,
	[LEAVE_FROM_TIME] [datetime] NOT NULL,
	[LEAVE_TO_DATE] [datetime] NOT NULL,
	[LEAVE_TO_TIME] [datetime] NOT NULL,
	[LEAVE_REASON] [varchar](max) NULL,
 CONSTRAINT [PK_EMPLOYEE_LEAVE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_FIRST_NAME] [varchar](max) NOT NULL,
	[EMPLOYEE_MIDDLE_NAME] [varchar](max) NULL,
	[EMPLOYEE_LAST_NAME] [varchar](max) NULL,
	[EMPLOYEE_ADDRESS] [varchar](max) NOT NULL,
	[EMPLOYEE_GENDER] [varchar](1) NOT NULL,
	[EMPLOYEE_DOB] [datetime] NOT NULL,
	[EMPLOYEE_DATE_OF_JOINING] [datetime] NOT NULL,
	[EMPLOYEE_DATE_LEAVE] [datetime] NOT NULL,
	[EMPLOYEE_TYPE_FK] [int] NOT NULL,
	[EMPLOYEE_EMAIL] [varchar](max) NOT NULL,
	[EMPLOYEE_PRIMARY_PHONE] [varchar](max) NOT NULL,
	[EMPLOYEE_SECONDARY_PHONE] [varchar](max) NULL,
	[EMPLOYEE_BANK_ID_FK] [int] NULL,
	[EMPLOYEE_BANK_ACCOUNT_NUMBER] [varchar](max) NULL,
 CONSTRAINT [PK_EMPLOYEE_MASTER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_SCHEDULE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[MON_SESS1_FROM] [datetime] NULL,
	[MON_SESS1_TO] [datetime] NULL,
	[MON_SESS2_FROM] [datetime] NULL,
	[MON_SESS2_TO] [datetime] NULL,
	[MON_SESS3_FROM] [datetime] NULL,
	[MON_SESS3_TO] [datetime] NULL,
	[TUE_SESS1_FROM] [datetime] NULL,
	[TUE_SESS1_TO] [datetime] NULL,
	[TUE_SESS2_FROM] [datetime] NULL,
	[TUE_SESS2_TO] [datetime] NULL,
	[TUE_SESS3_FROM] [datetime] NULL,
	[TUE_SESS3_TO] [datetime] NULL,
	[WED_SESS1_FROM] [datetime] NULL,
	[WED_SESS1_TO] [datetime] NULL,
	[WED_SESS2_FROM] [datetime] NULL,
	[WED_SESS2_TO] [datetime] NULL,
	[WED_SESS3_FROM] [datetime] NULL,
	[WED_SESS3_TO] [datetime] NULL,
	[THU_SESS1_FROM] [datetime] NULL,
	[THU_SESS1_TO] [datetime] NULL,
	[THU_SESS2_FROM] [datetime] NULL,
	[THU_SESS2_TO] [datetime] NULL,
	[THU_SESS3_FROM] [datetime] NULL,
	[THU_SESS3_TO] [datetime] NULL,
	[FRI_SESS1_FROM] [datetime] NULL,
	[FRI_SESS1_TO] [datetime] NULL,
	[FRI_SESS2_FROM] [datetime] NULL,
	[FRI_SESS2_TO] [datetime] NULL,
	[FRI_SESS3_FROM] [datetime] NULL,
	[FRI_SESS3_TO] [datetime] NULL,
	[SAT_SESS1_FROM] [datetime] NULL,
	[SAT_SESS1_TO] [datetime] NULL,
	[SAT_SESS2_FROM] [datetime] NULL,
	[SAT_SESS2_TO] [datetime] NULL,
	[SAT_SESS3_FROM] [datetime] NULL,
	[SAT_SESS3_TO] [datetime] NULL,
	[SUN_SESS1_FROM] [datetime] NULL,
	[SUN_SESS1_TO] [datetime] NULL,
	[SUN_SESS2_FROM] [datetime] NULL,
	[SUN_SESS2_TO] [datetime] NULL,
	[SUN_SESS3_FROM] [datetime] NULL,
	[SUN_SESS3_TO] [datetime] NULL,
 CONSTRAINT [PK_DOCTOR_SCHEDULE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[EMPLOYEE_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_TYPE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_EMPLOYEE_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_DOCTOR_TRANSFER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TRANSFER_DATE] [datetime] NOT NULL,
	[TRANSFER_TIME] [datetime] NOT NULL,
	[REASON_FOR_TRANSFER] [varchar](max) NOT NULL,
	[TRANSFER_TO_EMPLOYEE_ID_FK] [int] NOT NULL,
	[TRANSFER_BY_EMPLOYEE_ID_FK] [int] NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
 CONSTRAINT [PK_IPD_DOCTOR_TRANSFER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[IPD_OBSERVATION_ID_FK] [varchar](max) NOT NULL,
	[IPD_OBSERVATION_REPORT_ID_FK] [int] NOT NULL,
	[MEDICINE_TYPE_ID_FK] [int] NOT NULL,
	[MEDICINE_NAME_ID_FK] [int] NOT NULL,
	[MEDICINE_STRENGTH] [varchar](max) NULL,
	[MEDICINE_QUANTITY] [varchar](max) NOT NULL,
	[MEDICINE_START_DATE] [datetime] NOT NULL,
	[MEDICINE_NUMBER_OF_REFILLS] [int] NOT NULL,
	[MEDICINE_QUANTITY_ON_REFILLS] [varchar](max) NULL,
	[MEDICINE_INSTRUCTIONS] [varchar](max) NULL,
	[MEDICINE_STATUS] [varchar](max) NULL,
 CONSTRAINT [PK_IPD_OBSERVATION_MEDICINE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_REPORT_TABLE](
	[ID] [int] NOT NULL,
	[IPD_OBSERVATION_ID_FK] [varchar](max) NOT NULL,
	[PROBLEM] [varchar](max) NULL,
	[PROBLEM_DETAILS] [varchar](max) NULL,
	[SYSTEM_REVIEW] [varchar](max) NULL,
	[ASSESSMENT] [varchar](max) NULL,
	[FUTURE_PLAN] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_TABLE](
	[ID] [varchar](max) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[OBSERVATION_DATE] [datetime] NOT NULL,
	[OBSERVATION_TIME] [datetime] NOT NULL,
	[DOCTOR_ID_FK] [int] NOT NULL,
	[PATIENT_HEALTH_CONDITION] [int] NOT NULL,
	[TRANSFER_TO_DOCTOR_ID_FK] [int] NULL,
	[WARD_TRANSFER_ID_FK] [int] NULL,
	[NEXT_OBSERVATION_DATE] [datetime] NULL,
	[NEXT_OBSERVATION_TIME] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_REGISTRATION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[IPD_ID_FK] [int] NOT NULL,
	[REPORT_ID] [varchar](max) NOT NULL,
	[REPORT_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_IPD_REGISTRATION_REPORT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[LOGIN_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LOGIN_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NULL,
	[EMPLOYEE_USERNAME] [varchar](max) NOT NULL,
	[EMPLOYEE_PASSWORD] [varchar](max) NOT NULL,
	[ACCOUNT_ACTIVATION_DATE_TIME] [datetime] NOT NULL,
	[LAST_LOGIN_DATE_TIME] [datetime] NULL,
 CONSTRAINT [PK_TEMPORARY_LOGIN_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_DEGREE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_DEGREE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_DEGREE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICAL_DEGREE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_TEST_PACKAGE_ID_FK] [int] NOT NULL,
	[COMPONENT] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[MEDICAL_TEST_ID_FK] [int] NOT NULL,
	[TEST_DATE] [datetime] NOT NULL,
	[TEST_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_REGISTRATION_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[MEDICAL_TEST_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_TEST] [varchar](max) NOT NULL,
	[MEDICAL_TEST_CHARGE] [int] NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICINE_NAME_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICINE_NAME_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICINE_TYPE_ID_FK] [varchar](max) NOT NULL,
	[MEDICINE_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICINE_NAME_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICINE_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICINE_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICINE_TYPE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICINE_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MESSAGE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MESSAGE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SENDER_ID_FK] [int] NOT NULL,
	[MESSAGE_SUBJECT] [varchar](max) NOT NULL,
	[MESSAGE_CONTENT] [varchar](max) NOT NULL,
	[RECEIVER_ID_FK] [int] NOT NULL,
	[MESSAGE_DATE_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_MESSAGE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[OPD_MEDICAL_TEST_REGISTRATION_ID_FK] [int] NOT NULL,
	[INVOICE_ID] [varchar](max) NOT NULL,
	[INVOICE_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_PRESCRIPTION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[REPORT_ID] [varchar](max) NOT NULL,
	[REPORT_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_OPD_PRESCRIPTION_REPORT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_TREATMENT_MEDICINE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[MEDICINE_TYPE_ID_FK] [int] NOT NULL,
	[MEDICINE_NAME_ID_FK] [int] NOT NULL,
	[MEDICINE_STRENGTH] [varchar](max) NULL,
	[MEDICINE_QUANTITY] [varchar](max) NOT NULL,
	[MEDICINE_START_DATE] [datetime] NOT NULL,
	[MEDICINE_NUMBER_OF_REFILLS] [int] NOT NULL,
	[MEDICINE_QUANTITY_ON_REFILLS] [varchar](max) NULL,
	[MEDICINE_INSTRUCTIONS] [varchar](max) NULL,
 CONSTRAINT [PK_OPD_DIAGNOSIS_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_TREATMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_TREATMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[TREATMENT_DIAGNOSIS] [varchar](max) NOT NULL,
 CONSTRAINT [PK_OPD_DIAGNOSIS_TABLE_1] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_GENERAL_HEALTH]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_GENERAL_HEALTH](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_GENERAL_HEALTH] [varchar](max) NOT NULL,
 CONSTRAINT [PK_PATIENT_GENERAL_HEALTH] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_INDOOR_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_INDOOR_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PATIENT_GENERAL_HEALTH_ID_FK] [int] NOT NULL,
	[PATIENT_REGULAR_MEDICATIONS] [varchar](max) NULL,
	[PATIENT_ALLERGIES_STATUS] [int] NOT NULL,
	[PATIENT_ALLERGIES] [varchar](max) NULL,
	[PATIENT_SURGERY_STATUS] [int] NOT NULL,
	[PATIENT_SURGERY_TYPE_1] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_1] [datetime] NULL,
	[PATIENT_SURGERY_TYPE_2] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_2] [datetime] NULL,
	[PATIENT_SURGERY_TYPE_3] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_3] [datetime] NULL,
	[PATIENT_MEDICAL_INSURANCE_STATUS] [int] NOT NULL,
	[PATIENT_MEDICAL_INSURANCE_PROVIDER] [varchar](max) NULL,
	[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER] [varchar](max) NULL,
	[PATIENT_HEIGHT] [varchar](max) NOT NULL,
	[PATIENT_WEIGHT] [varchar](max) NOT NULL,
	[PATIENT_BLOOD_GROUP] [varchar](max) NULL,
	[PATIENT_ATTENDING_DOCTOR_ID_FK] [int] NOT NULL,
	[PATIENT_DATE_OF_ADMIT] [datetime] NOT NULL,
	[PATIENT_TIME_OF_ADMIT] [datetime] NOT NULL,
	[PATIENT_REMARK] [varchar](max) NULL,
 CONSTRAINT [PK_PATIENT_INDOOR_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_FIRST_NAME] [varchar](max) NOT NULL,
	[PATIENT_MIDDLE_NAME] [nchar](10) NULL,
	[PATIENT_LAST_NAME] [nchar](10) NULL,
	[PATIENT_DOB] [datetime] NOT NULL,
	[PATIENT_GENDER] [varchar](1) NOT NULL,
	[PATIENT_MARITAL_STATUS] [varchar](1) NULL,
	[PATIENT_FATHER_NAME] [varchar](max) NULL,
	[PATIENT_PRIMARY_ADDRESS] [varchar](max) NOT NULL,
	[PATIENT_SECONDARY_ADDRESS] [varchar](max) NULL,
	[PATIENT_PRIMARY_PHONE] [varchar](max) NOT NULL,
	[PATIENT_SECONDARY_PHONE] [varchar](max) NULL,
	[PATIENT_EMERGENCY_CONTACT_NAME] [varchar](max) NULL,
	[PATIENT_EMERGENCY_CONTACT_NUMBER] [varchar](max) NULL,
	[PATIENT_EMAIL] [varchar](max) NULL,
	[PATIENT_OCCUPATION] [varchar](max) NULL,
	[PATIENT_OCCUPATION_NAME] [varchar](max) NULL,
	[PATIENT_OCCUPATION_ADDRESS] [varchar](max) NULL,
	[PATIENT_MONTHLY_INCOME] [varchar](max) NULL,
	[PATIENT_REFERENCE_FK] [int] NULL,
	[PATIENT_REFERENCE_SOURCE_ID_FK] [int] NULL,
	[PATIENT_PRIMARY_LANGUAGE] [varchar](max) NULL,
	[PATIENT_FAMILY_SIZE] [varchar](max) NULL,
	[PATIENT_REGISTRATION_DATE_TIME] [datetime] NULL,
	[PATIENT_REGISTERED_BY_ID] [int] NULL,
 CONSTRAINT [PK_PATIENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_SUBSCRIBER_RELATIONSHIP] [varchar](max) NOT NULL,
 CONSTRAINT [PK_PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PATIENT_TYPE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_PATIENT_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_WARD_TRANSFER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PREVIOUS_WARD_ID_FK] [int] NOT NULL,
	[PREVIOUS_WARD_NUMBER] [int] NOT NULL,
	[TRANSFER_TIME] [datetime] NOT NULL,
	[TRANSFER_DATE] [datetime] NOT NULL,
	[REASON_FOR_TRANSFER] [varchar](max) NOT NULL,
	[NEW_WARD_ID_FK] [int] NOT NULL,
	[NEW_WARD_NUMBER] [int] NOT NULL,
	[SYSTEM_DATE_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_PATIENT_WARD_TRANSFER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[RECEPTIONIST_MARKS_10] [varchar](max) NOT NULL,
	[RECEPTIONIST_MARKS_12] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_APPOINTMENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALLER_AREA] [varchar](max) NOT NULL,
	[EMERGENCY_DETAILS] [varchar](max) NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_EMERGENCY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALL_FORWARDED_TO] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_FORWARD] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALLER_QUERY] [varchar](max) NOT NULL,
	[CALL_OUTCOME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[MESSAGE_FOR] [varchar](max) NOT NULL,
	[MESSAGE_CONTENT] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_MESSAGE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[REFERENCE_SOURCE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[REFERENCE_SOURCE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REFERENCE_SOURCE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_REFERENCE_SOURCE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[REMINDER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[REMINDER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[REMINDER_TITLE] [varchar](max) NOT NULL,
	[REMINDER_DETAILS] [varchar](max) NULL,
	[REMINDER_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_REMINDER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ROOM_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ROOM_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ROOM_TYPE_FK] [int] NOT NULL,
	[CASE_FK] [int] NOT NULL,
 CONSTRAINT [PK_ROOM_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[ROOM_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ROOM_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ROOM_TYPE] [varchar](max) NOT NULL,
	[ROOM_CHARGE_PER_DAY] [int] NOT NULL,
 CONSTRAINT [PK_ROOM_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SMS_TEMPLATE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMS_TEMPLATE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SMS_TEMPLATE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SMS_TEMPLATE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SYMPTOMS_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SYMPTOMS_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SYMPTOMS] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SYMPTOMS_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[WARD_STATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WARD_STATION_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[WARD_ID_FK] [int] NOT NULL,
	[WARD_NUMBER] [int] NOT NULL,
	[PATIENT_ID_FK] [int] NULL,
	[CASE_ID_FK] [int] NULL,
 CONSTRAINT [PK_WARD_STATION_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[WARD_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[WARD_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[WARD_NAME] [varchar](max) NOT NULL,
	[WARD_START_NUMBER] [int] NULL,
	[WARD_END_NUMBER] [int] NULL,
	[WARD_NUMBER_OF_BEDS] [int] NULL,
	[WARD_CHARGE] [varchar](max) NULL,
 CONSTRAINT [PK_WARD_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[APPOINTMENT_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_INVOICE_TABLE] CHECK CONSTRAINT [FK_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_BODY_PART_TABLE] FOREIGN KEY([BODY_PART_ID_FK])
REFERENCES [dbo].[BODY_PART_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_BODY_PART_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([DOCTOR_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[CASE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_CASE_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[CASE_MASTER_TABLE] CHECK CONSTRAINT [FK_CASE_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_DEPARTMENT_TABLE] FOREIGN KEY([DOCTOR_DEPARTMENT_FK])
REFERENCES [dbo].[DEPARTMENT_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_DEPARTMENT_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_MEDICAL_DEGREE_TABLE] FOREIGN KEY([DOCTOR_DEGREE_FK])
REFERENCES [dbo].[MEDICAL_DEGREE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_MEDICAL_DEGREE_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_LEAVE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_LEAVE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_LEAVE_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_LEAVE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_BANK_NAME_TABLE] FOREIGN KEY([EMPLOYEE_BANK_ID_FK])
REFERENCES [dbo].[BANK_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_BANK_NAME_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_EMPLOYEE_TYPE_TABLE] FOREIGN KEY([EMPLOYEE_TYPE_FK])
REFERENCES [dbo].[EMPLOYEE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_EMPLOYEE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_SCHEDULE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_SCHEDULE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([TRANSFER_TO_EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_IPD_DOCTOR_TRANSFER_TABLE] FOREIGN KEY([TRANSFER_BY_EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_IPD_DOCTOR_TRANSFER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_NAME_TABLE] FOREIGN KEY([MEDICINE_NAME_ID_FK])
REFERENCES [dbo].[MEDICINE_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE] CHECK CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_NAME_TABLE]
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_TYPE_TABLE] FOREIGN KEY([MEDICINE_TYPE_ID_FK])
REFERENCES [dbo].[MEDICINE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE] CHECK CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE] CHECK CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_PATIENT_INDOOR_TABLE1] FOREIGN KEY([IPD_ID_FK])
REFERENCES [dbo].[PATIENT_INDOOR_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE] CHECK CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_PATIENT_INDOOR_TABLE1]
GO
ALTER TABLE [dbo].[LOGIN_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_TEMPORARY_LOGIN_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[LOGIN_TABLE] CHECK CONSTRAINT [FK_TEMPORARY_LOGIN_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE_MEDICAL_TEST_TABLE] FOREIGN KEY([MEDICAL_TEST_PACKAGE_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE_MEDICAL_TEST_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_MEDICAL_TEST_TABLE] FOREIGN KEY([MEDICAL_TEST_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_MEDICAL_TEST_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MESSAGE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([SENDER_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MESSAGE_TABLE] CHECK CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MESSAGE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE1] FOREIGN KEY([RECEIVER_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MESSAGE_TABLE] CHECK CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE1]
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] CHECK CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_MEDICAL_TEST_REGISTRATION_TABLE] FOREIGN KEY([OPD_MEDICAL_TEST_REGISTRATION_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] CHECK CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_MEDICAL_TEST_REGISTRATION_TABLE]
GO
ALTER TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_PRESCRIPTION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE] CHECK CONSTRAINT [FK_OPD_PRESCRIPTION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_NAME_TABLE] FOREIGN KEY([MEDICINE_NAME_ID_FK])
REFERENCES [dbo].[MEDICINE_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE] CHECK CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_NAME_TABLE]
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_TYPE_TABLE] FOREIGN KEY([MEDICINE_TYPE_ID_FK])
REFERENCES [dbo].[MEDICINE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE] CHECK CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_DOCTOR_MASTER_TABLE] FOREIGN KEY([PATIENT_ATTENDING_DOCTOR_ID_FK])
REFERENCES [dbo].[DOCTOR_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_DOCTOR_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_GENERAL_HEALTH] FOREIGN KEY([PATIENT_GENERAL_HEALTH_ID_FK])
REFERENCES [dbo].[PATIENT_GENERAL_HEALTH] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_GENERAL_HEALTH]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_MASTER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([PATIENT_REGISTERED_BY_ID])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_MASTER_TABLE] CHECK CONSTRAINT [FK_PATIENT_MASTER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_TYPE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_TYPE_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_TYPE_TABLE] CHECK CONSTRAINT [FK_PATIENT_TYPE_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE] FOREIGN KEY([NEW_WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE1] FOREIGN KEY([PREVIOUS_WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE1]
GO
ALTER TABLE [dbo].[RECEPTIONIST_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_MASTER_TABLE_RECEPTIONIST_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_MASTER_TABLE] CHECK CONSTRAINT [FK_RECEPTIONIST_MASTER_TABLE_RECEPTIONIST_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_APPOINTMENT_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_APPOINTMENT_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_EMERGENCY_RECEPTIONIST_PHONE_CALL_EMERGENCY] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_EMERGENCY_RECEPTIONIST_PHONE_CALL_EMERGENCY]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_FORWARD_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_FORWARD_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY_EMPLOYEE_MASTER_TABLE1] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY_EMPLOYEE_MASTER_TABLE1]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_MESSAGE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_MESSAGE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[REMINDER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_REMINDER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[REMINDER_TABLE] CHECK CONSTRAINT [FK_REMINDER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[ROOM_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_ROOM_TABLE_CASE_MASTER_TABLE] FOREIGN KEY([CASE_FK])
REFERENCES [dbo].[CASE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[ROOM_TABLE] CHECK CONSTRAINT [FK_ROOM_TABLE_CASE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[ROOM_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_ROOM_TABLE_ROOM_TYPE_TABLE] FOREIGN KEY([ROOM_TYPE_FK])
REFERENCES [dbo].[ROOM_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[ROOM_TABLE] CHECK CONSTRAINT [FK_ROOM_TABLE_ROOM_TYPE_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_CASE_MASTER_TABLE] FOREIGN KEY([CASE_ID_FK])
REFERENCES [dbo].[CASE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_CASE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_WARD_TABLE] FOREIGN KEY([WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_WARD_TABLE]
GO
/****** Object:  StoredProcedure [dbo].[sp_Common_SearchAllPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Common_SearchAllPatients]

@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE
FROM 
PATIENT_MASTER_TABLE A
WHERE 
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%');
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservation]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservation]

@ipdObservationId varchar(max),
@doctorId int,
@patientId int,
@observationDate datetime,
@observationTime datetime,
@patientHealthCondition int,
@transferToDoctorId int,
@wardTransferId int

AS

INSERT INTO IPD_OBSERVATION_TABLE
(
[ID],
[PATIENT_ID_FK],
[DOCTOR_ID_FK],
[OBSERVATION_DATE],
[OBSERVATION_TIME],
[PATIENT_HEALTH_CONDITION],
[TRANSFER_TO_DOCTOR_ID_FK],
[WARD_TRANSFER_ID_FK]
)
VALUES
(
@ipdObservationId,
@patientId,
@doctorId,
@observationDate,
@observationTime,
@patientHealthCondition,
@transferToDoctorId,
@wardTransferId
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservationMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservationMedicine]

@ipdObservationId varchar(max),
@ipdObservationReportId int,
@medicineTypeId int,
@medicineNameId int,
@medicineStrength varchar(max),
@medicineQuantity varchar(max),
@medicineStartDate datetime,
@numberOfRefills int,
@quantityOnRefills varchar(max),
@medicineInstructions varchar(max)

AS

INSERT INTO IPD_OBSERVATION_MEDICINE_TABLE
(
[IPD_OBSERVATION_ID_FK],
[IPD_OBSERVATION_REPORT_ID_FK],
[MEDICINE_TYPE_ID_FK],
[MEDICINE_NAME_ID_FK],
[MEDICINE_STRENGTH],
[MEDICINE_QUANTITY],
[MEDICINE_START_DATE],
[MEDICINE_NUMBER_OF_REFILLS],
[MEDICINE_QUANTITY_ON_REFILLS],
[MEDICINE_INSTRUCTIONS],
[MEDICINE_STATUS]
)
VALUES
(
@ipdObservationId,
@ipdObservationReportId,
@medicineTypeId,
@medicineNameId,
@medicineStrength,
@medicineQuantity,
@medicineStartDate,
@numberOfRefills,
@quantityOnRefills,
@medicineInstructions,
'Active'
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservationReport]

@ipdObservationReportId int,
@ipdObservationId varchar(max),
@problem varchar(max),
@problemDetails varchar(max),
@systemReview varchar(max),
@assessment varchar(max),
@plan varchar(max)

AS

INSERT INTO IPD_OBSERVATION_REPORT_TABLE
(
[ID],
[IPD_OBSERVATION_ID_FK],
[PROBLEM],
[PROBLEM_DETAILS],
[SYSTEM_REVIEW],
[ASSESSMENT],
[FUTURE_PLAN]
)
VALUES
(
@ipdObservationReportId,
@ipdObservationId,
@problem,
@problemDetails,
@systemReview,
@assessment,
@plan
);

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_ChangeIPDMedicineStatus]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_ChangeIPDMedicineStatus]

@ipdMedicineStatus varchar(max),
@ipdMedicineId int

AS

UPDATE IPD_OBSERVATION_MEDICINE_TABLE
SET
MEDICINE_STATUS=@ipdMedicineStatus
WHERE
ID=@ipdMedicineId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_DeleteIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_DeleteIPDObservationReport]

@ipdObservationReportId int

AS

DELETE FROM
IPD_OBSERVATION_MEDICINE_TABLE
WHERE
IPD_OBSERVATION_REPORT_ID_FK=@ipdObservationReportId;

DELETE FROM
IPD_OBSERVATION_REPORT_TABLE
WHERE
ID=@ipdObservationReportId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAllDoctors]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAllDoctors]

@doctorId int

AS

SELECT
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK AND
A.ID!=@doctorId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAllIPDObservationReports]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAllIPDObservationReports]

@patientId int

AS

SELECT 
A.ID,
A.IPD_OBSERVATION_ID_FK,
A.PROBLEM,
A.PROBLEM_DETAILS,
A.SYSTEM_REVIEW,
A.ASSESSMENT,
A.FUTURE_PLAN,
CONVERT(VARCHAR(11), B.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), B.OBSERVATION_TIME, 108) AS OBSERVATION_TIME
FROM
IPD_OBSERVATION_REPORT_TABLE A,
IPD_OBSERVATION_TABLE B
WHERE
A.IPD_OBSERVATION_ID_FK=B.ID AND
B.PATIENT_ID_FK=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAppointmentDetailsByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAppointmentDetailsByAppointmentToken]

@appointmentToken varchar(max)

AS

SELECT 
CONVERT(VARCHAR(10), APPOINTMENT_DATE, 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), APPOINTMENT_TIME, 108) AS APPOINTMENT_TIME,
PATIENT_ID_FK
FROM
APPOINTMENT_TABLE
WHERE
APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAppointmentsByDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAppointmentsByDate]

@doctorId int,
@appointmentDate datetime

AS

SELECT
A.[DOCTOR_ID_FK] AS ID, 
A.[APPOINTMENT_TOKEN],
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE
A.DOCTOR_ID_FK=@doctorId AND
A.PATIENT_ID_FK=B.ID AND
A.APPOINTMENT_DATE=@appointmentDate;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetCalendarAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetCalendarAppointments]

@doctorId int

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK AND
B.DOCTOR_ID_FK=@doctorId
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetCurrentIPDPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetCurrentIPDPatients]

@doctorId int

AS

SELECT
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), B.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(VARCHAR(11), C.OBSERVATION_DATE, 110) AS LAST_OBSERVATION_DATE,
CONVERT(CHAR(5), C.OBSERVATION_TIME, 108) AS LAST_OBSERVATION_TIME,
CONVERT(VARCHAR(11), C.NEXT_OBSERVATION_DATE, 110) AS NEXT_OBSERVATION_DATE,
CONVERT(CHAR(5), C.NEXT_OBSERVATION_TIME, 108) AS NEXT_OBSERVATION_TIME,
D.WARD_NUMBER,
E.WARD_NAME
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE B,
IPD_OBSERVATION_TABLE C,
WARD_STATION_TABLE D,
WARD_TABLE E
WHERE 
A.ID=C.PATIENT_ID_FK AND
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
C.DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.PATIENT_ID_FK=A.ID AND
E.ID=D.WARD_ID_FK;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetDoctorByDepartment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetDoctorByDepartment]

@departmentId int,
@empId int

AS

SELECT 
B.ID,
A.[EMPLOYEE_ID_FK] AS ID, (B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DEPARTMENT
FROM
DOCTOR_MASTER_TABLE A, 
EMPLOYEE_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
B.[ID]=A.[ID] AND 
B.[ID]!=@empId AND
A.[DOCTOR_DEPARTMENT_FK]=@departmentId AND
A.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDActiveMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDActiveMedicines]

@patientId int,
@doctorId int

AS

SELECT DISTINCT
C.ID,
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PROBLEM,
C.MEDICINE_INSTRUCTIONS,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY,
C.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), C.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
C.MEDICINE_STRENGTH,
C.MEDICINE_STATUS,
D.MEDICINE_TYPE,
E.MEDICINE_NAME
FROM
IPD_OBSERVATION_TABLE A,
IPD_OBSERVATION_REPORT_TABLE B,
IPD_OBSERVATION_MEDICINE_TABLE C,
MEDICINE_TYPE_TABLE D,
MEDICINE_NAME_TABLE E
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=@doctorId AND
B.IPD_OBSERVATION_ID_FK=A.ID AND
(C.IPD_OBSERVATION_REPORT_ID_FK=B.ID OR C.IPD_OBSERVATION_REPORT_ID_FK=0) AND
C.IPD_OBSERVATION_ID_FK=A.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_STATUS='Active';

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDAllMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDAllMedicines]

@patientId int,
@doctorId int

AS

SELECT DISTINCT
C.ID,
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PROBLEM,
C.MEDICINE_INSTRUCTIONS,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY,
C.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), C.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
C.MEDICINE_STRENGTH,
C.MEDICINE_STATUS,
D.MEDICINE_TYPE,
E.MEDICINE_NAME
FROM
IPD_OBSERVATION_TABLE A,
IPD_OBSERVATION_REPORT_TABLE B,
IPD_OBSERVATION_MEDICINE_TABLE C,
MEDICINE_TYPE_TABLE D,
MEDICINE_NAME_TABLE E
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=@doctorId AND
B.IPD_OBSERVATION_ID_FK=A.ID AND
(C.IPD_OBSERVATION_REPORT_ID_FK=B.ID OR C.IPD_OBSERVATION_REPORT_ID_FK=0) AND
C.IPD_OBSERVATION_ID_FK=A.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDHotCase]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDHotCase]

@doctorId int

AS

SELECT 
CONVERT(VARCHAR(11), A.TRANSFER_DATE, 110) AS TRANSFER_DATE,
CONVERT(CHAR(5), A.TRANSFER_TIME, 108) AS TRANSFER_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
(C.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(C.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(C.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
A.REASON_FOR_TRANSFER
FROM
IPD_DOCTOR_TRANSFER_TABLE A,
PATIENT_MASTER_TABLE B,
EMPLOYEE_MASTER_TABLE C
WHERE
A.TRANSFER_TO_EMPLOYEE_ID_FK=@doctorId AND
A.PATIENT_ID_FK=B.ID AND
A.TRANSFER_BY_EMPLOYEE_ID_FK=C.ID;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationDetailsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationDetailsById]

@ipdObservationId varchar(max)

AS

SELECT 
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PATIENT_GENERAL_HEALTH
FROM
IPD_OBSERVATION_TABLE A,
PATIENT_GENERAL_HEALTH B
WHERE
A.PATIENT_HEALTH_CONDITION=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationHistory]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationHistory]

@patientId int,
@doctorId int

AS

SELECT 
ID,
CONVERT(VARCHAR(11), OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), OBSERVATION_TIME, 108) AS OBSERVATION_TIME
FROM 
IPD_OBSERVATION_TABLE
WHERE 
PATIENT_ID_FK=@patientId AND
DOCTOR_ID_FK=@doctorId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationMedicine]

@ipdObservationId varchar(max)

AS

SELECT 
A.[IPD_OBSERVATION_REPORT_ID_FK],
B.[MEDICINE_TYPE],
C.[MEDICINE_NAME],
A.[MEDICINE_STRENGTH],
A.[MEDICINE_QUANTITY],
CONVERT(VARCHAR(10), A.[MEDICINE_START_DATE], 111) AS MEDICINE_START_DATE,
A.[MEDICINE_NUMBER_OF_REFILLS],
A.[MEDICINE_QUANTITY_ON_REFILLS],
A.[MEDICINE_INSTRUCTIONS]
FROM
IPD_OBSERVATION_MEDICINE_TABLE A,
MEDICINE_TYPE_TABLE B,
MEDICINE_NAME_TABLE C
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId AND
B.ID=A.MEDICINE_TYPE_ID_FK AND
C.ID=A.MEDICINE_NAME_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationReport]

@ipdObservationId varchar(max)

AS

SELECT 
ID,
PROBLEM,
PROBLEM_DETAILS,
SYSTEM_REVIEW,
ASSESSMENT,
FUTURE_PLAN
FROM
IPD_OBSERVATION_REPORT_TABLE
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDPatientDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDPatientDetails]

@patientId int,
@doctorId int

AS

SELECT 
A.[PATIENT_ID_FK],
B.PATIENT_GENERAL_HEALTH,
A.[PATIENT_REGULAR_MEDICATIONS],
A.[PATIENT_ALLERGIES_STATUS],
A.[PATIENT_ALLERGIES],
A.[PATIENT_SURGERY_STATUS],
A.[PATIENT_SURGERY_TYPE_1],
A.[PATIENT_SURGERY_DATE_1],
A.[PATIENT_SURGERY_TYPE_2],
A.[PATIENT_SURGERY_DATE_2],
A.[PATIENT_SURGERY_TYPE_3],
A.[PATIENT_SURGERY_DATE_3],
A.[PATIENT_MEDICAL_INSURANCE_STATUS],
A.[PATIENT_MEDICAL_INSURANCE_PROVIDER],
A.[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER],
A.[PATIENT_HEIGHT],
A.[PATIENT_WEIGHT],
A.[PATIENT_BLOOD_GROUP],
A.[PATIENT_ATTENDING_DOCTOR_ID_FK],
CONVERT(VARCHAR(11), A.[PATIENT_DATE_OF_ADMIT], 110) AS PATIENT_DATE_OF_ADMIT,
CONVERT(CHAR(5), A.[PATIENT_TIME_OF_ADMIT], 108) AS PATIENT_TIME_OF_ADMIT,
A.[PATIENT_REMARK]
FROM
PATIENT_INDOOR_TABLE A,
PATIENT_GENERAL_HEALTH B
WHERE
A.PATIENT_ID_FK=@patientId AND
A.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
A.PATIENT_GENERAL_HEALTH_ID_FK=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDReportMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDReportMedicine]

@ipdObservationReportId int,
@ipdObservationId varchar(max)

AS

SELECT
A.MEDICINE_INSTRUCTIONS,
A.MEDICINE_NUMBER_OF_REFILLS,
A.MEDICINE_QUANTITY,
A.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), A.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
A.MEDICINE_STRENGTH,
B.MEDICINE_TYPE,
C.MEDICINE_NAME
FROM
IPD_OBSERVATION_MEDICINE_TABLE A,
MEDICINE_TYPE_TABLE B,
MEDICINE_NAME_TABLE C
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId AND
A.MEDICINE_TYPE_ID_FK=B.ID AND
A.MEDICINE_NAME_ID_FK=C.ID AND
IPD_OBSERVATION_REPORT_ID_FK=@ipdObservationReportId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetNewIPDPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetNewIPDPatients]

@doctorId int

AS

(SELECT
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), B.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(CHAR(5), B.PATIENT_TIME_OF_ADMIT, 108) AS ADMISSION_TIME,
C.WARD_NUMBER,
D.WARD_NAME
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE B,
WARD_STATION_TABLE C,
WARD_TABLE D
WHERE
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.ID=C.WARD_ID_FK
)
EXCEPT
(
SELECT 
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), C.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(CHAR(5), C.PATIENT_TIME_OF_ADMIT, 108) AS ADMISSION_TIME,
D.WARD_NUMBER,
E.WARD_NAME
FROM 
PATIENT_MASTER_TABLE A,
IPD_OBSERVATION_TABLE B,
PATIENT_INDOOR_TABLE C,
WARD_STATION_TABLE D,
WARD_TABLE E
WHERE
A.ID=B.PATIENT_ID_FK AND
B.DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.PATIENT_ID_FK=A.ID AND
E.ID=D.WARD_ID_FK
)
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetPatientDetailsByIPDObservationID]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetPatientDetailsByIPDObservationID]

@ipdObservationId varchar(max)

AS

SELECT 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
PATIENT_MASTER_TABLE A,
IPD_OBSERVATION_TABLE B
WHERE
B.PATIENT_ID_FK=A.ID AND
B.ID=@ipdObservationId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_IPDDoctorTransfer]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_IPDDoctorTransfer]

@transferDate datetime,
@transferTime datetime,
@reasonForTransfer varchar(max),
@transferToDoctorId int,
@transferByDoctorId int,
@patientId int

AS

INSERT INTO IPD_DOCTOR_TRANSFER_TABLE
(
[TRANSFER_DATE],
[TRANSFER_TIME],
[REASON_FOR_TRANSFER],
[TRANSFER_TO_EMPLOYEE_ID_FK],
[TRANSFER_BY_EMPLOYEE_ID_FK],
[PATIENT_ID_FK]
)
VALUES
(
@transferDate,
@transferTime,
@reasonForTransfer,
@transferToDoctorId,
@transferByDoctorId,
@patientId
);
SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_LeaveApplication]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_LeaveApplication]

@doctorId int,
@leaveFromDate datetime,
@leaveFromTime datetime,
@leaveToDate datetime,
@leaveToTime datetime,
@leaveReason varchar(max)

AS

INSERT INTO EMPLOYEE_LEAVE_TABLE
(
[EMPLOYEE_ID_FK],
[LEAVE_FROM_DATE],
[LEAVE_FROM_TIME],
[LEAVE_TO_DATE],
[LEAVE_TO_TIME],
[LEAVE_REASON]
)
VALUES
(
@doctorId,
@leaveFromDate,
@leaveFromTime,
@leaveToDate,
@leaveToTime,
@leaveReason
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Mobile_ForgotAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Mobile_ForgotAppointmentToken]

@patientPhoneNumber varchar(max),
@patientDOB datetime

AS

SELECT TOP 1
A.APPOINTMENT_TOKEN
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE
A.PATIENT_ID_FK=B.ID AND
B.PATIENT_DOB=@patientDOB AND
B.PATIENT_PRIMARY_PHONE=@patientPhoneNumber;
GO
/****** Object:  StoredProcedure [dbo].[spAddAppointmentInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddAppointmentInvoice]

@empId int,
@appointmentToken varchar(max)

AS

INSERT INTO APPOINTMENT_INVOICE_TABLE
(
EMPLOYEE_ID_FK,
INVOICE_ID,
APPOINTMENT_TOKEN,
INVOICE_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM APPOINTMENT_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@appointmentToken,
GETDATE()
);
SELECT INVOICE_ID FROM APPOINTMENT_INVOICE_TABLE
WHERE
INVOICE_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM APPOINTMENT_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddCase]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddCase]
@doctorId int,
@patientId int,
@caseStartDate datetime,
@caseEndDate datetime

AS

INSERT INTO CASE_MASTER_TABLE
(
[DOCTOR_FK],
[PATIENT_FK],
[CASE_START_DATE],
[CASE_END_DATE]
)
VALUES
(
@doctorId,
@patientId,
@caseStartDate,
@caseEndDate
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spAddIpdRegistrationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddIpdRegistrationReport]

@empId int,
@ipdId int

AS

INSERT INTO IPD_REGISTRATION_REPORT_TABLE
(
EMPLOYEE_ID_FK,
REPORT_ID,
IPD_ID_FK,
REPORT_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM IPD_REGISTRATION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@ipdId,
GETDATE()
);
SELECT REPORT_ID FROM IPD_REGISTRATION_REPORT_TABLE
WHERE
REPORT_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM IPD_REGISTRATION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddLastLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddLastLogin]

@empId int

AS

UPDATE LOGIN_TABLE
SET
[LAST_LOGIN_DATE_TIME]=GETDATE()
WHERE
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDMedicalRegistrationInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDMedicalRegistrationInvoice]

@empId int,
@opdMedicalTestRegistrationId int

AS

INSERT INTO OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE
(
EMPLOYEE_ID_FK,
INVOICE_ID,
OPD_MEDICAL_TEST_REGISTRATION_ID_FK,
INVOICE_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@opdMedicalTestRegistrationId,
GETDATE()
);
SELECT INVOICE_ID FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE
WHERE
INVOICE_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDMedicalTestRegistration]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDMedicalTestRegistration]

@patientId int,
@medicalTestId int,
@testDate datetime,
@testTime datetime

AS

INSERT INTO MEDICAL_TEST_REGISTRATION_TABLE
(
[PATIENT_ID_FK],
[MEDICAL_TEST_ID_FK],
[TEST_DATE],
[TEST_TIME]
)
VALUES
(
@patientId,
@medicalTestId,
@testDate,
@testTime
);
SELECT SCOPE_IDENTITY();

GO
/****** Object:  StoredProcedure [dbo].[spAddOPDPrescriptionReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDPrescriptionReport]

@empId int,
@appointmentToken varchar(max)

AS

INSERT INTO OPD_PRESCRIPTION_REPORT_TABLE
(
EMPLOYEE_ID_FK,
REPORT_ID,
APPOINTMENT_TOKEN,
REPORT_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM OPD_PRESCRIPTION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@appointmentToken,
GETDATE()
);
SELECT REPORT_ID FROM OPD_PRESCRIPTION_REPORT_TABLE
WHERE
REPORT_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM OPD_PRESCRIPTION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDTreatment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDTreatment]

@appointmentToken varchar(max),
@treatmentDiagnosis varchar(max)

AS

INSERT INTO OPD_TREATMENT_TABLE
(
[APPOINTMENT_TOKEN],
[TREATMENT_DIAGNOSIS]
)
VALUES
(
@appointmentToken,
@treatmentDiagnosis
);
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDTreatmentMedicine]

@appointmentToken varchar(max),
@medicineTypeId int,
@medicineNameId int,
@medicineStrength varchar(max),
@medicineQuantity varchar(max),
@medicineStartDate datetime,
@numberOfRefills int,
@quantityOnRefills varchar(max),
@medicineInstructions varchar(max)

AS

INSERT INTO OPD_TREATMENT_MEDICINE_TABLE
(
[APPOINTMENT_TOKEN],
[MEDICINE_TYPE_ID_FK],
[MEDICINE_NAME_ID_FK],
[MEDICINE_STRENGTH],
[MEDICINE_QUANTITY],
[MEDICINE_START_DATE],
[MEDICINE_NUMBER_OF_REFILLS],
[MEDICINE_QUANTITY_ON_REFILLS],
[MEDICINE_INSTRUCTIONS]
)
VALUES
(
@appointmentToken,
@medicineTypeId,
@medicineNameId,
@medicineStrength,
@medicineQuantity,
@medicineStartDate,
@numberOfRefills,
@quantityOnRefills,
@medicineInstructions
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPatientAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPatientAppointment]
@patientId int,
@doctorId int,
@appointmentDate datetime,
@appointmentTime datetime,
@problemBodyPartId int,
@problemDescription varchar(max)

AS

INSERT INTO [APPOINTMENT_TABLE]
(
[APPOINTMENT_TOKEN],
[PATIENT_ID_FK],
[DOCTOR_ID_FK],
[APPOINTMENT_DATE],
[APPOINTMENT_TIME],
[BODY_PART_ID_FK],
[PROBLEM_DESCRIPTION]
)
VALUES
(
CAST(YEAR(@appointmentDate) AS VARCHAR(10)) + CAST(MONTH(@appointmentDate) AS VARCHAR(10)) + CAST(1+(SELECT COUNT(*) FROM APPOINTMENT_TABLE WHERE MONTH(APPOINTMENT_DATE)=MONTH(@appointmentDate) AND YEAR(APPOINTMENT_DATE)=YEAR(@appointmentDate)) AS VARCHAR(10)),
@patientId,
@doctorId,
@appointmentDate,
@appointmentTime,
@problemBodyPartId,
@problemDescription
);
SELECT APPOINTMENT_TOKEN 
FROM APPOINTMENT_TABLE
WHERE 
APPOINTMENT_TOKEN=CAST(YEAR(@appointmentDate) AS VARCHAR(10)) + CAST(MONTH(@appointmentDate) AS VARCHAR(10)) + CAST((SELECT COUNT(*) FROM APPOINTMENT_TABLE WHERE MONTH(APPOINTMENT_DATE)=MONTH(@appointmentDate) AND YEAR(APPOINTMENT_DATE)=YEAR(@appointmentDate)) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddPatientType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPatientType]

@patientId int

AS

INSERT INTO PATIENT_TYPE_TABLE
(
PATIENT_ID_FK,
PATIENT_TYPE
)
VALUES
(
@patientId,
'OUT'
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallAppointment]

@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max)

AS

INSERT INTO [RECEPTIONIST_PHONE_CALL_APPOINTMENT]
(
[EMPLOYEE_ID_FK],
[CALL_DATE],
[CALL_TIME],
[CALLER_NAME]
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
@callerName
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallAppointmentId]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallAppointmentId]

@appointmentToken varchar(max),
@phoneCallId int

AS

UPDATE RECEPTIONIST_PHONE_CALL_APPOINTMENT
SET
APPOINTMENT_TOKEN=@appointmentToken
WHERE
ID=@phoneCallId;
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallEmergency]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallEmergency]

@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callerArea varchar(max),
@emergencyDetails varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_EMERGENCY
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALLER_AREA,
EMERGENCY_DETAILS
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callerArea,
@emergencyDetails
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallForward]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallForward]
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callForwardedTo varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_FORWARD
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALL_FORWARDED_TO
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callForwardedTo
);

GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallGeneralInquiry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallGeneralInquiry] 
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callerQuery varchar(max),
@callOutcome varchar(max)
AS
INSERT INTO RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALLER_QUERY,
CALL_OUTCOME
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callerQuery,
@callOutcome
);


GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallMessage]
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@messageFor int,
@message varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_MESSAGE
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
MESSAGE_FOR,
MESSAGE_CONTENT
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@messageFor,
@message
);

GO
/****** Object:  StoredProcedure [dbo].[spAddReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddReminder]

@empId int,
@reminderTitle varchar(max),
@reminderDetails varchar(max),
@reminderDate datetime

AS

INSERT INTO REMINDER_TABLE
(
EMPLOYEE_ID_FK,
REMINDER_TITLE,
REMINDER_DETAILS,
REMINDER_DATE
)
VALUES
(
@empId,
@reminderTitle,
@reminderDetails,
@reminderDate
);
GO
/****** Object:  StoredProcedure [dbo].[spAddTemporaryLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddTemporaryLogin]

@empId int,
@empUsername varchar(max),
@empPassword varchar(max)

AS

INSERT INTO LOGIN_TABLE
(
[EMPLOYEE_ID_FK],
[EMPLOYEE_USERNAME],
[EMPLOYEE_PASSWORD],
[ACCOUNT_ACTIVATION_DATE_TIME]
)
VALUES
(
@empId,
@empUsername,
@empPassword,
GETDATE()
);
GO
/****** Object:  StoredProcedure [dbo].[spAddWardEntry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddWardEntry]

@wardId int,
@wardNumber int,
@patientId int,
@caseId int

AS

UPDATE [WARD_STATION_TABLE]
SET
[PATIENT_ID_FK]=@patientId,
[CASE_ID_FK]=@caseId
WHERE
[WARD_ID_FK]=@wardId
AND
[WARD_NUMBER]=@wardNumber;
GO
/****** Object:  StoredProcedure [dbo].[spCancelAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spCancelAppointment]

@appointmentToken varchar(max)

AS

DELETE FROM APPOINTMENT_TABLE
WHERE 
APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[spChangeEmailAddress]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangeEmailAddress]

@empId int,
@emailAddress varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_EMAIL=@emailAddress
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangePassword]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangePassword]

@empId int,
@password varchar(max)

AS

UPDATE lOGIN_TABLE
SET
EMPLOYEE_PASSWORD=@password
WHERE
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangePrimaryPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangePrimaryPhoneNumber]

@empId int,
@primaryPhoneNumber varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_PRIMARY_PHONE=@primaryPhoneNumber
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangeSecondaryPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangeSecondaryPhoneNumber]

@empId int,
@secondaryPhoneNumber varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_SECONDARY_PHONE=@secondaryPhoneNumber
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spCreateNewMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spCreateNewMessage]

@senderId int,
@messageSubject varchar(max),
@messageContent varchar(max),
@receiverId int

AS

INSERT INTO MESSAGE_TABLE
(
[SENDER_ID_FK],
[MESSAGE_SUBJECT],
[MESSAGE_CONTENT],
[RECEIVER_ID_FK],
[MESSAGE_DATE_TIME]
)
VALUES
(
@senderId,
@messageSubject,
@messageContent,
@receiverId,
GETDATE()
); 
GO
/****** Object:  StoredProcedure [dbo].[spDeleteTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spDeleteTreatmentMedicine]

@treatmentMedicineId int

AS

DELETE FROM OPD_TREATMENT_MEDICINE_TABLE
WHERE
ID=@treatmentMedicineId;
GO
/****** Object:  StoredProcedure [dbo].[spEditAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spEditAppointment]

@appointmentToken varchar(max), 
@oldAppointmentDate varchar(max),
@newAppointmentDate datetime, 
@newAppointmentTime datetime

AS

UPDATE 
APPOINTMENT_TABLE
SET
APPOINTMENT_DATE=@newAppointmentDate,
APPOINTMENT_TIME=@newAppointmentTime
WHERE
APPOINTMENT_TOKEN=@appointmentToken AND
APPOINTMENT_DATE=@oldAppointmentDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterEmergencyPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterEmergencyPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_AREA],
[EMERGENCY_DETAILS]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]
WHERE 
[EMPLOYEE_ID_FK]=@empId AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterForwardPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterForwardPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS
  
SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.CALL_FORWARDED_TO=B.ID AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterGeneralInquiryPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterGeneralInquiryPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_QUERY],
[CALL_OUTCOME]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]
WHERE 
[EMPLOYEE_ID_FK]=@empId AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterMessagePhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterMessagePhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS
  
SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME,
A.[MESSAGE_CONTENT] AS MESSAGE_CONTENT
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.MESSAGE_FOR=B.ID AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByAfterDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByAfterDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE>=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByBeforeDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByBeforeDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE<=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByOnDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByOnDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetAccountInfo]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAccountInfo]

@empId int

AS

SELECT A.EMPLOYEE_PHONE, A.EMPLOYEE_EMAIL, B.ACCOUNT_ACTIVATION_DATE_TIME, B.EMPLOYEE_USERNAME, B.EMPLOYEE_PASSWORD, B.LAST_LOGIN_DATE_TIME FROM EMPLOYEE_MASTER_TABLE A, LOGIN_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK
AND
B.EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetAllDoctors]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllDoctors]

AS

SELECT
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetAllEmployees]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllEmployees]

@empId int

AS

SELECT 
ID, (EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM 
EMPLOYEE_MASTER_TABLE
WHERE
ID!=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetAllReminders]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllReminders]

@empId int

AS

SELECT
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE 
FROM
REMINDER_TABLE
WHERE 
EMPLOYEE_ID_FK=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetAppointmentInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAppointmentInvoice]

AS

SELECT 
B.INVOICE_ID,
A.APPOINTMENT_TOKEN,
INVOICE_DATE,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
(D.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(D.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(D.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME

FROM

APPOINTMENT_TABLE A,
APPOINTMENT_INVOICE_TABLE B,
PATIENT_MASTER_TABLE C,
EMPLOYEE_MASTER_TABLE D

WHERE

A.DOCTOR_ID_FK=D.ID AND
A.PATIENT_ID_FK=C.ID AND
B.APPOINTMENT_TOKEN=A.APPOINTMENT_TOKEN AND
D.ID=A.DOCTOR_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarDoctorAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarDoctorAppointments]

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarDoctorAppointmentsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarDoctorAppointmentsById]

@doctorId int

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK AND
B.DOCTOR_ID_FK=@doctorId
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarReminder]

@empId int

AS

SELECT COUNT([REMINDER_DATE]) AS REMINDER_COUNT, CONVERT(VARCHAR(10), [REMINDER_DATE], 111) AS REMINDER_DATE
FROM REMINDER_TABLE
WHERE EMPLOYEE_ID_FK=@empId
GROUP BY REMINDER_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarReminderInfo]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarReminderInfo]

@reminderDate datetime,
@empId int

AS

SELECT * FROM REMINDER_TABLE
WHERE
REMINDER_DATE=@reminderDate AND
EMPLOYEE_ID_FK=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentByDateTime]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentByDateTime]

@empId int,
@appointmentDate datetime,
@appointmentTime datetime

AS

SELECT *
FROM
APPOINTMENT_TABLE
WHERE
DOCTOR_ID_FK=@empId AND
CONVERT(VARCHAR(11), APPOINTMENT_DATE, 110)=CONVERT(VARCHAR(11), @appointmentDate, 110) AND
CONVERT(CHAR(5), APPOINTMENT_TIME, 108)=CONVERT(CHAR(5), @appointmentTime, 108)
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointments]

@empId int

AS

SELECT 
COUNT(ID) APPOINTMENT_COUNT,
APPOINTMENT_DATE
FROM
APPOINTMENT_TABLE
WHERE
DOCTOR_ID_FK=@empId
GROUP BY APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentsByDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentsByDate]

@appointmentDate datetime

AS

SELECT
A.[DOCTOR_ID_FK] AS ID, 
A.[APPOINTMENT_TOKEN],
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
EMPLOYEE_MASTER_TABLE B,
PATIENT_MASTER_TABLE C,
DOCTOR_MASTER_TABLE D
WHERE
A.DOCTOR_ID_FK=D.ID AND
D.EMPLOYEE_ID_FK=B.ID AND
A.PATIENT_ID_FK=C.ID AND
A.APPOINTMENT_DATE=@appointmentDate;
 
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentsById]

@doctorId int

AS

SELECT 
A.[APPOINTMENT_TOKEN],
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, ' ')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE A.PATIENT_ID_FK=B.ID
AND A.[APPOINTMENT_DATE]>=GETDATE();
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorByAppointmentDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorByAppointmentDate]

@appointmentDate datetime

AS

SELECT 
A.ID,
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B,
APPOINTMENT_TABLE C
WHERE
A.ID=B.EMPLOYEE_ID_FK AND
C.DOCTOR_ID_FK=A.ID AND
C.APPOINTMENT_DATE=@appointmentDate;
 
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorByDepartment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorByDepartment]
@departmentId int

AS

SELECT 
B.ID,
A.[EMPLOYEE_ID_FK] AS ID, (B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DEPARTMENT
FROM
DOCTOR_MASTER_TABLE A, 
EMPLOYEE_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
B.[ID]=A.[ID] AND 
A.[DOCTOR_DEPARTMENT_FK]=@departmentId AND
A.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorNameByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorNameByAppointmentToken]

@appointmentToken varchar(max)

AS

SELECT (A.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
APPOINTMENT_TABLE B
WHERE 
B.APPOINTMENT_TOKEN=@appointmentToken AND
A.ID=B.DOCTOR_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeLeave]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeLeave]

@empId int
 
AS
 
SELECT
CONVERT(VARCHAR(10), [LEAVE_FROM_DATE], 111) AS FROM_DATE,
CONVERT(CHAR(5), [LEAVE_FROM_TIME], 108) AS FROM_TIME,
CONVERT(VARCHAR(10), [LEAVE_TO_DATE], 111) AS TO_DATE,
CONVERT(CHAR(5), [LEAVE_TO_TIME], 108) AS TO_TIME 
FROM EMPLOYEE_LEAVE_TABLE
WHERE
LEAVE_TO_DATE>=GETDATE() AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeName]

@empId int

AS

SELECT (A.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME 
FROM 
[EMPLOYEE_MASTER_TABLE] A, [LOGIN_TABLE] B
WHERE 
A.ID=B.EMPLOYEE_ID_FK AND
B.EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeNameById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeNameById]

@empId int

AS

SELECT 
(EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM
EMPLOYEE_MASTER_TABLE
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeSchedule]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeSchedule]

@empId int

AS

SELECT 
CONVERT(CHAR(5), [MON_SESS1_FROM], 108) AS [MON_SESS1_FROM],
CONVERT(CHAR(5), [MON_SESS1_TO], 108) AS [MON_SESS1_TO],
CONVERT(CHAR(5), [MON_SESS2_FROM], 108) AS [MON_SESS2_FROM],
CONVERT(CHAR(5), [MON_SESS2_TO], 108) AS [MON_SESS2_TO],
CONVERT(CHAR(5), [MON_SESS3_FROM], 108) AS [MON_SESS3_FROM],
CONVERT(CHAR(5), [MON_SESS3_TO], 108) AS [MON_SESS3_TO],
CONVERT(CHAR(5), [TUE_SESS1_FROM], 108) AS [TUE_SESS1_FROM],
CONVERT(CHAR(5), [TUE_SESS1_TO], 108) AS [TUE_SESS1_TO],
CONVERT(CHAR(5), [TUE_SESS2_FROM], 108) AS [TUE_SESS2_FROM],
CONVERT(CHAR(5), [TUE_SESS2_TO], 108) AS [TUE_SESS2_TO],
CONVERT(CHAR(5), [TUE_SESS3_FROM], 108) AS [TUE_SESS3_FROM],
CONVERT(CHAR(5), [TUE_SESS3_TO], 108) AS [TUE_SESS3_TO],
CONVERT(CHAR(5), [WED_SESS1_FROM], 108) AS [WED_SESS1_FROM],
CONVERT(CHAR(5), [WED_SESS1_TO], 108) AS [WED_SESS1_TO],
CONVERT(CHAR(5), [WED_SESS2_FROM], 108) AS [WED_SESS2_FROM],
CONVERT(CHAR(5), [WED_SESS2_TO], 108) AS [WED_SESS2_TO],
CONVERT(CHAR(5), [WED_SESS3_FROM], 108) AS [WED_SESS3_FROM],
CONVERT(CHAR(5), [WED_SESS3_TO], 108) AS [WED_SESS3_TO],
CONVERT(CHAR(5), [THU_SESS1_FROM], 108) AS [THU_SESS1_FROM],
CONVERT(CHAR(5), [THU_SESS1_TO], 108) AS [THU_SESS1_TO],
CONVERT(CHAR(5), [THU_SESS2_FROM], 108) AS [THU_SESS2_FROM],
CONVERT(CHAR(5), [THU_SESS2_TO], 108) AS [THU_SESS2_TO],
CONVERT(CHAR(5), [THU_SESS3_FROM], 108) AS [THU_SESS3_FROM],
CONVERT(CHAR(5), [THU_SESS3_TO], 108) AS [THU_SESS3_TO],
CONVERT(CHAR(5), [FRI_SESS1_FROM], 108) AS [FRI_SESS1_FROM],
CONVERT(CHAR(5), [FRI_SESS1_TO], 108) AS [FRI_SESS1_TO],
CONVERT(CHAR(5), [FRI_SESS2_FROM], 108) AS [FRI_SESS2_FROM],
CONVERT(CHAR(5), [FRI_SESS2_TO], 108) AS [FRI_SESS2_TO],
CONVERT(CHAR(5), [FRI_SESS3_FROM], 108) AS [FRI_SESS3_FROM],
CONVERT(CHAR(5), [FRI_SESS3_TO], 108) AS [FRI_SESS3_TO],
CONVERT(CHAR(5), [SAT_SESS1_FROM], 108) AS [SAT_SESS1_FROM],
CONVERT(CHAR(5), [SAT_SESS1_TO], 108) AS [SAT_SESS1_TO],
CONVERT(CHAR(5), [SAT_SESS2_FROM], 108) AS [SAT_SESS2_FROM],
CONVERT(CHAR(5), [SAT_SESS2_TO], 108) AS [SAT_SESS2_TO],
CONVERT(CHAR(5), [SAT_SESS3_FROM], 108) AS [SAT_SESS3_FROM],
CONVERT(CHAR(5), [SAT_SESS3_TO], 108) AS [SAT_SESS3_TO],
CONVERT(CHAR(5), [SUN_SESS1_FROM], 108) AS [SUN_SESS1_FROM],
CONVERT(CHAR(5), [SUN_SESS1_TO], 108) AS [SUN_SESS1_TO],
CONVERT(CHAR(5), [SUN_SESS2_FROM], 108) AS [SUN_SESS2_FROM],
CONVERT(CHAR(5), [SUN_SESS2_TO], 108) AS [SUN_SESS2_TO],
CONVERT(CHAR(5), [SUN_SESS3_FROM], 108) AS [SUN_SESS3_FROM],
CONVERT(CHAR(5), [SUN_SESS3_TO], 108) AS [SUN_SESS3_TO]
FROM
EMPLOYEE_SCHEDULE_TABLE
WHERE 
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetInbox]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetInbox]

@empId int

AS

SELECT 
A.ID,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS SENDER,
A.MESSAGE_SUBJECT,
CONVERT(VARCHAR(10), A.MESSAGE_DATE_TIME, 111) AS MESSAGE_DATE,
CONVERT(CHAR(5), A.MESSAGE_DATE_TIME, 108) AS MESSAGE_TIME 
FROM
MESSAGE_TABLE A,
EMPLOYEE_MASTER_TABLE B
WHERE RECEIVER_ID_FK=@empId AND
A.SENDER_ID_FK=B.ID
ORDER BY MESSAGE_DATE_TIME;
GO
/****** Object:  StoredProcedure [dbo].[spGetIPDRegistrationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetIPDRegistrationReport]

AS

SELECT
A.REPORT_ID,
A.REPORT_DATE,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME

FROM

IPD_REGISTRATION_REPORT_TABLE A,
PATIENT_INDOOR_TABLE B,
PATIENT_MASTER_TABLE C

WHERE
A.IPD_ID_FK=B.ID AND
B.PATIENT_ID_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicalTestById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicalTestById]

@medicalTestId int

AS

SELECT 
MEDICAL_TEST
FROM
MEDICAL_TEST_TABLE
WHERE 
ID=@medicalTestId;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicalTestCharges]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicalTestCharges]

AS

SELECT
ID,
MEDICAL_TEST,
MEDICAL_TEST_CHARGE
FROM
MEDICAL_TEST_TABLE;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicineNameByType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicineNameByType]

@medicineTypeId int

AS

SELECT 
ID,
MEDICINE_NAME
FROM
MEDICINE_NAME_TABLE
WHERE
MEDICINE_TYPE_ID_FK=@medicineTypeId;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDMedicalTestRegistrationInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDMedicalTestRegistrationInvoice]

AS

SELECT
C.INVOICE_ID,
C.INVOICE_DATE,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
MEDICAL_TEST_REGISTRATION_TABLE A,
PATIENT_MASTER_TABLE B,
OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE C
WHERE
A.PATIENT_ID_FK=B.ID AND
C.OPD_MEDICAL_TEST_REGISTRATION_ID_FK=A.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDPatientDetailsForBilling]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDPatientDetailsForBilling]

@patientId int

AS

SELECT 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
A.PATIENT_GENDER,
DATEDIFF(hour,A.PATIENT_DOB,GETDATE())/8766 AS PATIENT_AGE,
CONVERT(VARCHAR(10), B.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), B.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
A.PATIENT_REGISTRATION_DATE_TIME,
(C.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(C.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(C.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
PATIENT_MASTER_TABLE A,
APPOINTMENT_TABLE B,
EMPLOYEE_MASTER_TABLE C
WHERE
A.ID=@patientId AND
B.PATIENT_ID_FK=@patientId AND
C.ID=B.DOCTOR_ID_FK;

GO
/****** Object:  StoredProcedure [dbo].[spGetOPDTreatmentAllMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDTreatmentAllMedicines]

@patientId int

AS

SELECT
A.MEDICINE_NAME,
B.MEDICINE_TYPE,
C.MEDICINE_STRENGTH,
C.MEDICINE_QUANTITY,
CONVERT(VARCHAR(10), C.MEDICINE_START_DATE, 111) AS MEDICINE_START_DATE,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY_ON_REFILLS,
C.MEDICINE_INSTRUCTIONS
FROM
MEDICINE_NAME_TABLE A,
MEDICINE_TYPE_TABLE B,
OPD_TREATMENT_MEDICINE_TABLE C,
APPOINTMENT_TABLE D
WHERE
C.MEDICINE_TYPE_ID_FK=B.ID AND
C.MEDICINE_NAME_ID_FK=A.ID AND
C.APPOINTMENT_TOKEN=D.APPOINTMENT_TOKEN AND
D.PATIENT_ID_FK=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDTreatmentMedicine]

@appointmentToken varchar(max)

AS

SELECT
A.ID,
C.MEDICINE_TYPE,
B.MEDICINE_NAME,
A.MEDICINE_STRENGTH,
A.MEDICINE_QUANTITY,
CONVERT(VARCHAR(10), A.MEDICINE_START_DATE, 111) AS MEDICINE_START_DATE,
A.MEDICINE_NUMBER_OF_REFILLS,
A.MEDICINE_QUANTITY_ON_REFILLS,
A.MEDICINE_INSTRUCTIONS
FROM
OPD_TREATMENT_MEDICINE_TABLE A,
MEDICINE_NAME_TABLE B,
MEDICINE_TYPE_TABLE C 
WHERE
A.APPOINTMENT_TOKEN=@appointmentToken AND
A.MEDICINE_TYPE_ID_FK=C.ID AND
A.MEDICINE_NAME_ID_FK=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientAppointmentHistory]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientAppointmentHistory]

@patientId int

AS

SELECT 
A.APPOINTMENT_TOKEN,
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
APPOINTMENT_TABLE A,
EMPLOYEE_MASTER_TABLE B
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=B.ID AND
A.APPOINTMENT_DATE<GETDATE();
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientAppointments]
@appointmentToken varchar(max)

AS

SELECT CAST(A.APPOINTMENT_DATE AS DATE) [DATE], CAST(A.APPOINTMENT_TIME AS TIME) [TIME], C.EMPLOYEE_NAME AS DOCTOR_NAME FROM [APPOINTMENT_TABLE] A, [DOCTOR_MASTER_TABLE] B, [EMPLOYEE_MASTER_TABLE] C
WHERE
A.APPOINTMENT_TOKEN=@appointmentToken
AND
B.ID=A.DOCTOR_ID_FK
AND
C.ID=B.EMPLOYEE_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientDetails]

@patientId int

AS

SELECT 
B.PREFIX,
A.[PATIENT_FIRST_NAME],
A.[PATIENT_LAST_NAME],
A.[PATIENT_DOB],
C.MARITAL_STATUS,
D.GENDER,
A.[PATIENT_STREET_ADDRESS],
A.[PATIENT_CITY],
A.[PATIENT_ZIP_CODE],
A.[PATIENT_STATE],
A.[PATIENT_COUNTRY],
A.[PATIENT_PRIMARY_PHONE],
A.[PATIENT_SECONDARY_PHONE],
A.[PATIENT_EMERGENCY_CONTACT],
A.[PATIENT_EMERGENCY_PHONE],
A.[PATIENT_EMAIL],
E.OCCUPATION,
A.[PATIENT_EMPLOYER_NAME],
A.[PATIENT_EMPLOYER_STREET_ADDRESS],
A.[PATIENT_EMPLOYER_CITY],
A.[PATIENT_EMPLOYER_STATE],
A.[PATIENT_EMPLOYER_COUNTRY],
A.[PATIENT_LANGUAGE],
A.[PATIENT_REFERENCE],
A.[PATIENT_FAMILY_SIZE],
A.[PATIENT_MONTHLY_INCOME],
F.REFERENCE_SOURCE,
A.[PATIENT_REGISTRATION_DATE_TIME]

FROM PATIENT_MASTER_TABLE A, PREFIX_TABLE B, MARITAL_STATUS_TABLE C, GENDER_TABLE D, PATIENT_OCCUPATION_TABLE E, REFERENCE_SOURCE_TABLE F
WHERE
A.PATIENT_NAME_PREFIX_FK=B.ID AND
A.PATIENT_MARITAL_STATUS_FK=C.ID AND
A.PATIENT_GENDER_FK=D.ID AND
A.PATIENT_OCCUPATION_FK=E.ID AND
A.PATIENT_REFERENCE_SOURCE_FK=F.ID AND
A.ID=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientInfoByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientInfoByAppointmentToken]
@appointmentToken varchar(max)

AS

SELECT 
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(10), A.PATIENT_DOB, 111) AS PATIENT_DOB,
A.PATIENT_PRIMARY_PHONE,
CONVERT(VARCHAR(10), B.APPOINTMENT_DATE, 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), B.APPOINTMENT_TIME, 108) AS APPOINTMENT_TIME
FROM 
[PATIENT_MASTER_TABLE] A, 
[APPOINTMENT_TABLE] B
WHERE
A.ID=B.PATIENT_ID_FK AND
B.APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallEmergency]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallEmergency]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_AREA],
[EMERGENCY_DETAILS]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]
WHERE 
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallForward]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallForward]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.CALL_FORWARDED_TO=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallGeneralInquiry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallGeneralInquiry]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_QUERY],
[CALL_OUTCOME]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]
WHERE 
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallMessage]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME,
A.[MESSAGE_CONTENT] AS MESSAGE_CONTENT
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.MESSAGE_FOR=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPresentEmployees]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPresentEmployees]

AS

SELECT A.EMPLOYEE_FIRST_NAME + ' ' + A.EMPLOYEE_LAST_NAME AS EMPLOYEE_NAME, C.EMPLOYEE_TYPE, CONVERT(CHAR(5), A.EMPLOYEE_SHIFT_START_TIME, 108) AS SHIFT_START_TIME, CONVERT(CHAR(5), A.EMPLOYEE_SHIFT_END_TIME, 108) AS SHIFT_END_TIME, CONVERT(CHAR(5), B.LAST_LOGIN_DATE_TIME, 108) AS LOGIN_TIME
FROM EMPLOYEE_MASTER_TABLE A, LOGIN_TABLE B, EMPLOYEE_TYPE_TABLE C
WHERE CONVERT(VARCHAR(10), B.LAST_LOGIN_DATE_TIME, 111)=CONVERT(VARCHAR(10), GETDATE(), 111) AND
A.ID=B.EMPLOYEE_ID_FK AND
A.EMPLOYEE_TYPE_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetRoomDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetRoomDetails]

@wardId int,
@wardNumber int

AS

SELECT
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_GENDER, 
A.PATIENT_DOB, 
A.PATIENT_PRIMARY_ADDRESS, 
A.PATIENT_PRIMARY_PHONE, 
A.PATIENT_EMAIL, 
(D.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(D.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(D.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME, 
E.CASE_ID_FK, 
C.PATIENT_DATE_OF_ADMIT, 
C.PATIENT_TIME_OF_ADMIT, 
C.PATIENT_REMARK  
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE C,
EMPLOYEE_MASTER_TABLE D,
WARD_STATION_TABLE E
WHERE 
A.ID=E.PATIENT_ID_FK AND
C.PATIENT_ID_FK=E.PATIENT_ID_FK AND
C.PATIENT_ATTENDING_DOCTOR_ID_FK=D.ID AND
E.WARD_ID_FK=@wardId AND
E.WARD_NUMBER=@wardNumber;

GO
/****** Object:  StoredProcedure [dbo].[spGetSMSTemplate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetSMSTemplate]

@templateId int

AS

SELECT 
SMS_TEMPLATE
FROM SMS_TEMPLATE_TABLE
WHERE
ID=@templateId;

GO
/****** Object:  StoredProcedure [dbo].[spGetWardCharge]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetWardCharge]

AS

SELECT 
WARD_NAME, WARD_CHARGE
FROM
WARD_TABLE;
GO
/****** Object:  StoredProcedure [dbo].[spGetWardNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetWardNumber]
@wardId int

AS 

SELECT [WARD_NUMBER]
  FROM [HMS].[dbo].[WARD_STATION_TABLE]
  WHERE [PATIENT_ID_FK] IS NULL AND [WARD_ID_FK]=@wardId;
GO
/****** Object:  StoredProcedure [dbo].[spLastLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spLastLogin]

@empId int

AS

UPDATE LOGIN_TABLE
SET
[LAST_LOGIN_DATE_TIME]=GETDATE()
WHERE
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spLogin]

@empUsername varchar(max),
@empPassword varchar(max)

AS

SELECT [EMPLOYEE_ID_FK] FROM [LOGIN_TABLE]
WHERE
[EMPLOYEE_USERNAME]=@empUsername
AND
[EMPLOYEE_PASSWORD]=@empPassword;
GO
/****** Object:  StoredProcedure [dbo].[spPatientWardTransfer]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spPatientWardTransfer] 

@patientId int,
@previousWardId int,
@previousWardNumber int,
@transferTime datetime,
@transferDate datetime,
@reasonForTransfer varchar(max),
@newWardId int,
@newWardNumber int,
@empId int

AS

INSERT INTO PATIENT_WARD_TRANSFER_TABLE
(
[PATIENT_ID_FK],
[PREVIOUS_WARD_ID_FK],
[PREVIOUS_WARD_NUMBER],
[TRANSFER_TIME],
[TRANSFER_DATE],
[REASON_FOR_TRANSFER],
[NEW_WARD_ID_FK],
[NEW_WARD_NUMBER],
[EMPLOYEE_ID_FK],
[SYSTEM_DATE_TIME]
)
VALUES
(
@patientId,
@previousWardId,
@previousWardNumber,
@transferTime,
@transferDate,
@reasonForTransfer,
@newWardId,
@newWardNumber,
@empId,
GETDATE()
);

UPDATE WARD_STATION_TABLE
SET
CASE_ID_FK=(SELECT CASE_ID_FK FROM WARD_STATION_TABLE WHERE PATIENT_ID_FK=@patientId),
PATIENT_ID_FK=@patientId
WHERE 
WARD_ID_FK=@newWardId AND
WARD_NUMBER=@newWardNumber;


UPDATE WARD_STATION_TABLE
SET
CASE_ID_FK=NULL,
PATIENT_ID_FK=NULL
WHERE
WARD_ID_FK=@previousWardId AND
WARD_NUMBER=@previousWardNumber AND
PATIENT_ID_FK=@patientId;

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spRegisterDoctor]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterDoctor]
@doctorEmpId int,
@doctorLicenseNumber varchar(max),
@doctorDepartment int,
@doctorDegree int,
@doctorUniversityName varchar(max), 
@doctorUniversityCity varchar(max),
@doctorUniversityState varchar(max), 
@doctorUniversityCountry varchar(max),
@doctorExperience int

AS

INSERT INTO DOCTOR_MASTER_TABLE
(
[EMPLOYEE_ID_FK],
[DOCTOR_LICENSE_NUMBER],
[DOCTOR_DEPARTMENT_FK],
[DOCTOR_DEGREE_FK],
[DOCTOR_UNIVERSITY_NAME],
[DOCTOR_UNIVERSITY_CITY],
[DOCTOR_UNIVERSITY_STATE],
[DOCTOR_UNIVERSITY_COUNTRY],
[DOCTOR_EXPERIENCE]
)
VALUES
(
@doctorEmpId,
@doctorLicenseNumber,
@doctorDepartment,
@doctorDegree,
@doctorUniversityName,
@doctorUniversityCity,
@doctorUniversityState,
@doctorUniversityCountry,
@doctorExperience)
GO
/****** Object:  StoredProcedure [dbo].[spRegisterEmployee]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterEmployee]
@empName varchar(max),
@empGender varchar(1),
@empDOB datetime,
@empAddress varchar(max),
@empPhoneNumber varchar(max),
@empEmailAddress varchar(max),
@empType int,
@empDateOfJoin datetime,
@empDateOfLeave datetime,
@empBank int,
@empAccountNumber varchar(max)

AS

INSERT INTO EMPLOYEE_MASTER_TABLE
(
[EMPLOYEE_NAME],
[EMPLOYEE_ADDRESS],
[EMPLOYEE_GENDER],
[EMPLOYEE_DOB],
[EMPLOYEE_DATE_OF_JOINING],
[EMPLOYEE_DATE_LEAVE],
[EMPLOYEE_TYPE_FK],
[EMPLOYEE_BANK_ID_FK],
[EMPLOYEE_BANK_ACCOUNT_NUMBER],
[EMPLOYEE_EMAIL],
[EMPLOYEE_PHONE]
)
VALUES
(
@empName,
@empAddress,
@empGender,
@empDOB,
@empDateOfJoin,
@empDateOfLeave,
@empType,
@empBank,
@empAccountNumber,
@empEmailAddress,
@empPhoneNumber
)

SELECT SCOPE_IDENTITY();

GO
/****** Object:  StoredProcedure [dbo].[spRegisterIndoorPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterIndoorPatient]
@patientId int,
@patientGeneralHealth int,
@patientRegularMedications varchar(max),
@patientAllergyStatus int,
@patientAllergies varchar(max),
@patientPastSurgeryStatus int,
@patientSurgery1 varchar(max),
@patientSurgery1Date datetime,
@patientSurgery2 varchar(max),
@patientSurgery2Date datetime,
@patientSurgery3 varchar(max),
@patientSurgery3Date datetime,
@patientMedicalInsuranceStatus int,
@patientMedicalInsuranceProvider varchar(max),
@patientMedicalInsurancePolicyNumber varchar(max),
@patientHeight varchar(max),
@patientWeight varchar(max),
@patientBloodGroup varchar(max),
@patientAttendingDoctor int,
@patientDateOfAdmit datetime,
@patientTimeOfAdmit datetime,
@patientRemark varchar(max)

AS

INSERT INTO PATIENT_INDOOR_TABLE
(
[PATIENT_ID_FK],
[PATIENT_GENERAL_HEALTH_ID_FK],
[PATIENT_REGULAR_MEDICATIONS],
[PATIENT_ALLERGIES_STATUS],
[PATIENT_ALLERGIES],
[PATIENT_SURGERY_STATUS],
[PATIENT_SURGERY_TYPE_1],
[PATIENT_SURGERY_DATE_1],
[PATIENT_SURGERY_TYPE_2],
[PATIENT_SURGERY_DATE_2],
[PATIENT_SURGERY_TYPE_3],
[PATIENT_SURGERY_DATE_3],
[PATIENT_MEDICAL_INSURANCE_STATUS],
[PATIENT_MEDICAL_INSURANCE_PROVIDER],
[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER],
[PATIENT_HEIGHT],
[PATIENT_WEIGHT],
[PATIENT_BLOOD_GROUP],
[PATIENT_ATTENDING_DOCTOR_ID_FK],
[PATIENT_DATE_OF_ADMIT],
[PATIENT_TIME_OF_ADMIT],
[PATIENT_REMARK]
)
VALUES
(
@patientId,
@patientGeneralHealth,
@patientRegularMedications,
@patientAllergyStatus,
@patientAllergies,
@patientPastSurgeryStatus,
@patientSurgery1,
@patientSurgery1Date,
@patientSurgery2,
@patientSurgery2Date,
@patientSurgery3,
@patientSurgery3Date,
@patientMedicalInsuranceStatus,
@patientMedicalInsuranceProvider,
@patientMedicalInsurancePolicyNumber,
@patientHeight,
@patientWeight,
@patientBloodGroup,
@patientAttendingDoctor,
@patientDateOfAdmit,
@patientTimeOfAdmit,
@patientRemark
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spRegisterPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterPatient]

@patientFirstName varchar(max),
@patientMiddleName varchar(max) = null,
@patientLastName varchar(max) = null,
@patientDOB datetime, 
@patientGender varchar(1), 
@patientMaritalStatus varchar(1) = null, 
@patientFatherName varchar(max) = null, 
@patientPrimaryAddress varchar(max),
@patientSecondaryAddress varchar(max) = null,
@patientPrimaryPhone varchar(max), 
@patientSecondaryPhone varchar(max) = null, 
@patientEmail varchar(max) = null,
@patientEmergencyContactName varchar(max) = null,
@patientEmergencyContactNumber varchar(max) = null, 
@patientOccupationType int = null, 
@patientOccupationName varchar(max) = null, 
@patientOccupationAddress varchar(max) = null, 
@patientMonthlyIncome varchar(max) = null, 
@patientReference int = null, 
@patientReferenceSourceId int = null, 
@patientPrimaryLanguage varchar(max) = null,
@patientFamilySize int = null, 
@patientRegisteredById int = null

AS

INSERT INTO PATIENT_MASTER_TABLE
(
[PATIENT_FIRST_NAME],
[PATIENT_MIDDLE_NAME],
[PATIENT_LAST_NAME],
[PATIENT_DOB],
[PATIENT_GENDER],
[PATIENT_MARITAL_STATUS],
[PATIENT_FATHER_NAME],
[PATIENT_PRIMARY_ADDRESS],
[PATIENT_SECONDARY_ADDRESS],
[PATIENT_PRIMARY_PHONE],
[PATIENT_SECONDARY_PHONE],
[PATIENT_EMAIL],
[PATIENT_EMERGENCY_CONTACT_NAME],
[PATIENT_EMERGENCY_CONTACT_NUMBER],
[PATIENT_OCCUPATION],
[PATIENT_OCCUPATION_NAME],
[PATIENT_OCCUPATION_ADDRESS],
[PATIENT_MONTHLY_INCOME],
[PATIENT_REFERENCE_FK],
[PATIENT_REFERENCE_SOURCE_ID_FK],
[PATIENT_PRIMARY_LANGUAGE],
[PATIENT_FAMILY_SIZE],
[PATIENT_REGISTRATION_DATE_TIME],
[PATIENT_REGISTERED_BY_ID]
)
VALUES
(
@patientFirstName ,
@patientMiddleName ,
@patientLastName ,
@patientDOB , 
@patientGender , 
@patientMaritalStatus , 
@patientFatherName , 
@patientPrimaryAddress ,
@patientSecondaryAddress ,
@patientPrimaryPhone , 
@patientSecondaryPhone , 
@patientEmail ,
@patientEmergencyContactName ,
@patientEmergencyContactNumber , 
@patientOccupationType , 
@patientOccupationName , 
@patientOccupationAddress , 
@patientMonthlyIncome , 
@patientReference , 
@patientReferenceSourceId , 
@patientPrimaryLanguage ,
@patientFamilySize ,
GETDATE(),
@patientRegisteredById
);

SELECT SCOPE_IDENTITY();
 
GO
/****** Object:  StoredProcedure [dbo].[spRegisterReceptionist]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterReceptionist]
@receptionistEmpId int,
@marks10 varchar(max),
@marks12 varchar(max)

AS

INSERT INTO RECEPTIONIST_MASTER_TABLE
(
[EMPLOYEE_ID_FK],
[RECEPTIONIST_MARKS_10],
[RECEPTIONIST_MARKS_12]
)
VALUES
(
@receptionistEmpId,
@marks10,
@marks12
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spSearchDoctor]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchDoctor]

@doctorName varchar(max)

AS

SELECT 
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DOCTOR_DEPARTMENT
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
(EMPLOYEE_FIRST_NAME LIKE '%' + @doctorName + '%' OR
EMPLOYEE_MIDDLE_NAME LIKE '%' + @doctorName + '%' OR
EMPLOYEE_LAST_NAME LIKE '%' + @doctorName + '%') AND
A.ID=B.EMPLOYEE_ID_FK AND
B.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spSearchEmployeeByName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchEmployeeByName]

@empName varchar(max)

AS

SELECT 
ID, (EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME, EMPLOYEE_PRIMARY_PHONE
FROM
EMPLOYEE_MASTER_TABLE
WHERE
EMPLOYEE_FIRST_NAME LIKE '%' + @empName + '%' OR
EMPLOYEE_MIDDLE_NAME LIKE '%' + @empName + '%' OR
EMPLOYEE_LAST_NAME LIKE '%' + @empName + '%';
GO
/****** Object:  StoredProcedure [dbo].[spSearchIPDPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchIPDPatient]

@doctorId int,
@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
B.WARD_ID_FK,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE, 
B.WARD_NUMBER, 
C.WARD_NAME, 
C.ID AS WARD_ID, 
CONVERT(VARCHAR(11), D.PATIENT_DATE_OF_ADMIT, 110) AS ADMIT_DATE
FROM
PATIENT_MASTER_TABLE A,
WARD_STATION_TABLE B,
WARD_TABLE C,
PATIENT_INDOOR_TABLE D
WHERE
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%') AND
D.PATIENT_ID_FK=A.ID AND
B.PATIENT_ID_FK=D.PATIENT_ID_FK AND
B.WARD_ID_FK=C.ID AND
D.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId;

GO
/****** Object:  StoredProcedure [dbo].[spSearchOPDPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchOPDPatient]

@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE
FROM 
PATIENT_MASTER_TABLE A,
PATIENT_TYPE_TABLE B
WHERE 
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%') AND
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_TYPE='OUT';
GO
/****** Object:  StoredProcedure [dbo].[spSearchPatientByName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchPatientByName]

@patientName varchar(max)

AS

SELECT ID, (PATIENT_FIRST_NAME + ' ' + ISNULL(PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(PATIENT_LAST_NAME, '')) AS PATIENT_NAME, CONVERT(VARCHAR(110), PATIENT_DOB, 110) AS PATIENT_DOB, PATIENT_PRIMARY_PHONE
FROM
PATIENT_MASTER_TABLE
WHERE
PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%';
GO
/****** Object:  StoredProcedure [dbo].[spSearchPatientByPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchPatientByPhoneNumber]

@patientPhoneNumber varchar(max)

AS

SELECT A.ID, A.PATIENT_NAME, B.WARD_NAME, C.WARD_NUMBER
FROM
PATIENT_MASTER_TABLE A, WARD_TABLE B, WARD_STATION_TABLE C
WHERE
A.PATIENT_PHONE=@patientPhoneNumber AND 
A.ID=C.PATIENT_ID_FK AND 
B.ID=C.WARD_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spSetEmployeeSchedule]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSetEmployeeSchedule]

@empId int,
@monSess1From datetime=null,
@monSess1To datetime=null,
@monSess2From datetime=null,
@monSess2To datetime=null,
@monSess3From datetime=null,
@monSess3To datetime=null,
@tueSess1From datetime=null,
@tueSess1To datetime=null,
@tueSess2From datetime=null,
@tueSess2To datetime=null,
@tueSess3From datetime=null,
@tueSess3To datetime=null,
@wedSess1From datetime=null,
@wedSess1To datetime=null,
@wedSess2From datetime=null,
@wedSess2To datetime=null,
@wedSess3From datetime=null,
@wedSess3To datetime=null,
@thuSess1From datetime=null,
@thuSess1To datetime=null,
@thuSess2From datetime=null,
@thuSess2To datetime=null,
@thuSess3From datetime=null,
@thuSess3To datetime=null,
@friSess1From datetime=null,
@friSess1To datetime=null,
@friSess2From datetime=null,
@friSess2To datetime=null,
@friSess3From datetime=null,
@friSess3To datetime=null,
@satSess1From datetime=null,
@satSess1To datetime=null,
@satSess2From datetime=null,
@satSess2To datetime=null,
@satSess3From datetime=null,
@satSess3To datetime=null,
@sunSess1From datetime=null,
@sunSess1To datetime=null,
@sunSess2From datetime=null,
@sunSess2To datetime=null,
@sunSess3From datetime=null,
@sunSess3To datetime=null

AS

INSERT INTO EMPLOYEE_SCHEDULE_TABLE
(
[EMPLOYEE_ID_FK],
[MON_SESS1_FROM],
[MON_SESS1_TO],
[MON_SESS2_FROM],
[MON_SESS2_TO],
[MON_SESS3_FROM],
[MON_SESS3_TO],
[TUE_SESS1_FROM],
[TUE_SESS1_TO],
[TUE_SESS2_FROM],
[TUE_SESS2_TO],
[TUE_SESS3_FROM],
[TUE_SESS3_TO],
[WED_SESS1_FROM],
[WED_SESS1_TO],
[WED_SESS2_FROM],
[WED_SESS2_TO],
[WED_SESS3_FROM],
[WED_SESS3_TO],
[THU_SESS1_FROM],
[THU_SESS1_TO],
[THU_SESS2_FROM],
[THU_SESS2_TO],
[THU_SESS3_FROM],
[THU_SESS3_TO],
[FRI_SESS1_FROM],
[FRI_SESS1_TO],
[FRI_SESS2_FROM],
[FRI_SESS2_TO],
[FRI_SESS3_FROM],
[FRI_SESS3_TO],
[SAT_SESS1_FROM],
[SAT_SESS1_TO],
[SAT_SESS2_FROM],
[SAT_SESS2_TO],
[SAT_SESS3_FROM],
[SAT_SESS3_TO],
[SUN_SESS1_FROM],
[SUN_SESS1_TO],
[SUN_SESS2_FROM],
[SUN_SESS2_TO],
[SUN_SESS3_FROM],
[SUN_SESS3_TO]
)
VALUES
(
@empId,
@monSess1From,
@monSess1To, 
@monSess2From, 
@monSess2To,
@monSess3From,
@monSess3To,
@tueSess1From,
@tueSess1To,
@tueSess2From,
@tueSess2To,
@tueSess3From,
@tueSess3To,
@wedSess1From,
@wedSess1To,
@wedSess2From,
@wedSess2To,
@wedSess3From,
@wedSess3To,
@thuSess1From,
@thuSess1To,
@thuSess2From,
@thuSess2To,
@thuSess3From,
@thuSess3To,
@friSess1From,
@friSess1To,
@friSess2From,
@friSess2To,
@friSess3From,
@friSess3To,
@satSess1From,
@satSess1To,
@satSess2From,
@satSess2To,
@satSess3From,
@satSess3To,
@sunSess1From,
@sunSess1To,
@sunSess2From,
@sunSess2To,
@sunSess3From,
@sunSess3To
);
GO
/****** Object:  StoredProcedure [dbo].[spSetWardCharge]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSetWardCharge]

@suiteWardCharge varchar(max),
@deluxeWardCharge varchar(max),
@specialAcWardCharge varchar(max),
@semiWardPrivate varchar(max),
@generalWardCharge varchar(max)

AS

UPDATE WARD_TABLE
SET WARD_CHARGE = CASE ID
WHEN 1 THEN @suiteWardCharge
WHEN 3 THEN @deluxeWardCharge
WHEN 4 THEN @specialAcWardCharge
WHEN 5 THEN @semiWardPrivate
WHEN 6 THEN @generalWardCharge
END
WHERE ID IN (1,3,4,5,6);

GO
/****** Object:  StoredProcedure [dbo].[spUpdatePatientType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spUpdatePatientType]

@patientId int,
@patientType varchar(3)

AS

UPDATE 
PATIENT_TYPE_TABLE
SET
PATIENT_ID_FK=@patientId,
PATIENT_TYPE=@patientType
WHERE
PATIENT_ID_FK=@patientId;

GO
/****** Object:  StoredProcedure [dbo].[spUpdateReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spUpdateReminder]

@empId int,
@reminderId int,
@reminderTitle varchar(max),
@reminderDetails varchar(max)

AS

UPDATE REMINDER_TABLE
SET
REMINDER_TITLE=@reminderTitle,
REMINDER_DETAILS=@reminderDetails
WHERE
ID=@reminderId AND
EMPLOYEE_ID_FK=@empId;
GO
USE [master]
GO
ALTER DATABASE [HMS] SET  READ_WRITE 
GO
© 2018 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
API
Training
Shop
Blog
AboutUSE [master]
GO
/****** Object:  Database [HMS]    Script Date: 26-Feb-15 1:38:02 PM ******/
CREATE DATABASE [HMS]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'HMS', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\HMS.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'HMS_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\HMS_log.ldf' , SIZE = 1280KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [HMS] SET COMPATIBILITY_LEVEL = 110
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [HMS].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [HMS] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [HMS] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [HMS] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [HMS] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [HMS] SET ARITHABORT OFF 
GO
ALTER DATABASE [HMS] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [HMS] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [HMS] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [HMS] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [HMS] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [HMS] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [HMS] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [HMS] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [HMS] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [HMS] SET  DISABLE_BROKER 
GO
ALTER DATABASE [HMS] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [HMS] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [HMS] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [HMS] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [HMS] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [HMS] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [HMS] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [HMS] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [HMS] SET  MULTI_USER 
GO
ALTER DATABASE [HMS] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [HMS] SET DB_CHAINING OFF 
GO
ALTER DATABASE [HMS] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [HMS] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
USE [HMS]
GO
/****** Object:  Table [dbo].[APPOINTMENT_INVOICE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[APPOINTMENT_INVOICE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NULL,
	[INVOICE_ID] [varchar](max) NOT NULL,
	[INVOICE_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_INVOICE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[APPOINTMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[APPOINTMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[DOCTOR_ID_FK] [int] NOT NULL,
	[APPOINTMENT_DATE] [datetime] NOT NULL,
	[APPOINTMENT_TIME] [datetime] NOT NULL,
	[BODY_PART_ID_FK] [int] NULL,
	[PROBLEM_DESCRIPTION] [varchar](max) NULL,
 CONSTRAINT [PK_APPOINTMENT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BANK_NAME_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BANK_NAME_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[BANK_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_BANK_NAME_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BODY_PART_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[BODY_PART_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[BODY_PART] [varchar](max) NOT NULL,
 CONSTRAINT [PK_BODY_PART_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CASE_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[CASE_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[DOCTOR_FK] [int] NOT NULL,
	[PATIENT_FK] [int] NOT NULL,
	[CASE_START_DATE] [datetime] NOT NULL,
	[CASE_END_DATE] [datetime] NULL,
 CONSTRAINT [PK_CASE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[COUNTRY_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[COUNTRY_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[COUNTRY_CODE] [varchar](max) NOT NULL,
	[COUNTRY_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_COUNTRY_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DEPARTMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DEPARTMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SPECIALITY] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SPECIALITY_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DOCTOR_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DOCTOR_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[DOCTOR_LICENSE_NUMBER] [varchar](max) NOT NULL,
	[DOCTOR_DEPARTMENT_FK] [int] NOT NULL,
	[DOCTOR_DEGREE_FK] [int] NOT NULL,
	[DOCTOR_UNIVERSITY_NAME] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_CITY] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_STATE] [varchar](max) NOT NULL,
	[DOCTOR_UNIVERSITY_COUNTRY] [varchar](max) NOT NULL,
	[DOCTOR_EXPERIENCE] [int] NOT NULL,
 CONSTRAINT [PK_DOCTOR_MASTER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_LEAVE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_LEAVE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[LEAVE_FROM_DATE] [datetime] NOT NULL,
	[LEAVE_FROM_TIME] [datetime] NOT NULL,
	[LEAVE_TO_DATE] [datetime] NOT NULL,
	[LEAVE_TO_TIME] [datetime] NOT NULL,
	[LEAVE_REASON] [varchar](max) NULL,
 CONSTRAINT [PK_EMPLOYEE_LEAVE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_FIRST_NAME] [varchar](max) NOT NULL,
	[EMPLOYEE_MIDDLE_NAME] [varchar](max) NULL,
	[EMPLOYEE_LAST_NAME] [varchar](max) NULL,
	[EMPLOYEE_ADDRESS] [varchar](max) NOT NULL,
	[EMPLOYEE_GENDER] [varchar](1) NOT NULL,
	[EMPLOYEE_DOB] [datetime] NOT NULL,
	[EMPLOYEE_DATE_OF_JOINING] [datetime] NOT NULL,
	[EMPLOYEE_DATE_LEAVE] [datetime] NOT NULL,
	[EMPLOYEE_TYPE_FK] [int] NOT NULL,
	[EMPLOYEE_EMAIL] [varchar](max) NOT NULL,
	[EMPLOYEE_PRIMARY_PHONE] [varchar](max) NOT NULL,
	[EMPLOYEE_SECONDARY_PHONE] [varchar](max) NULL,
	[EMPLOYEE_BANK_ID_FK] [int] NULL,
	[EMPLOYEE_BANK_ACCOUNT_NUMBER] [varchar](max) NULL,
 CONSTRAINT [PK_EMPLOYEE_MASTER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPLOYEE_SCHEDULE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[MON_SESS1_FROM] [datetime] NULL,
	[MON_SESS1_TO] [datetime] NULL,
	[MON_SESS2_FROM] [datetime] NULL,
	[MON_SESS2_TO] [datetime] NULL,
	[MON_SESS3_FROM] [datetime] NULL,
	[MON_SESS3_TO] [datetime] NULL,
	[TUE_SESS1_FROM] [datetime] NULL,
	[TUE_SESS1_TO] [datetime] NULL,
	[TUE_SESS2_FROM] [datetime] NULL,
	[TUE_SESS2_TO] [datetime] NULL,
	[TUE_SESS3_FROM] [datetime] NULL,
	[TUE_SESS3_TO] [datetime] NULL,
	[WED_SESS1_FROM] [datetime] NULL,
	[WED_SESS1_TO] [datetime] NULL,
	[WED_SESS2_FROM] [datetime] NULL,
	[WED_SESS2_TO] [datetime] NULL,
	[WED_SESS3_FROM] [datetime] NULL,
	[WED_SESS3_TO] [datetime] NULL,
	[THU_SESS1_FROM] [datetime] NULL,
	[THU_SESS1_TO] [datetime] NULL,
	[THU_SESS2_FROM] [datetime] NULL,
	[THU_SESS2_TO] [datetime] NULL,
	[THU_SESS3_FROM] [datetime] NULL,
	[THU_SESS3_TO] [datetime] NULL,
	[FRI_SESS1_FROM] [datetime] NULL,
	[FRI_SESS1_TO] [datetime] NULL,
	[FRI_SESS2_FROM] [datetime] NULL,
	[FRI_SESS2_TO] [datetime] NULL,
	[FRI_SESS3_FROM] [datetime] NULL,
	[FRI_SESS3_TO] [datetime] NULL,
	[SAT_SESS1_FROM] [datetime] NULL,
	[SAT_SESS1_TO] [datetime] NULL,
	[SAT_SESS2_FROM] [datetime] NULL,
	[SAT_SESS2_TO] [datetime] NULL,
	[SAT_SESS3_FROM] [datetime] NULL,
	[SAT_SESS3_TO] [datetime] NULL,
	[SUN_SESS1_FROM] [datetime] NULL,
	[SUN_SESS1_TO] [datetime] NULL,
	[SUN_SESS2_FROM] [datetime] NULL,
	[SUN_SESS2_TO] [datetime] NULL,
	[SUN_SESS3_FROM] [datetime] NULL,
	[SUN_SESS3_TO] [datetime] NULL,
 CONSTRAINT [PK_DOCTOR_SCHEDULE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[EMPLOYEE_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPLOYEE_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_TYPE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_EMPLOYEE_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_DOCTOR_TRANSFER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[TRANSFER_DATE] [datetime] NOT NULL,
	[TRANSFER_TIME] [datetime] NOT NULL,
	[REASON_FOR_TRANSFER] [varchar](max) NOT NULL,
	[TRANSFER_TO_EMPLOYEE_ID_FK] [int] NOT NULL,
	[TRANSFER_BY_EMPLOYEE_ID_FK] [int] NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
 CONSTRAINT [PK_IPD_DOCTOR_TRANSFER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[IPD_OBSERVATION_ID_FK] [varchar](max) NOT NULL,
	[IPD_OBSERVATION_REPORT_ID_FK] [int] NOT NULL,
	[MEDICINE_TYPE_ID_FK] [int] NOT NULL,
	[MEDICINE_NAME_ID_FK] [int] NOT NULL,
	[MEDICINE_STRENGTH] [varchar](max) NULL,
	[MEDICINE_QUANTITY] [varchar](max) NOT NULL,
	[MEDICINE_START_DATE] [datetime] NOT NULL,
	[MEDICINE_NUMBER_OF_REFILLS] [int] NOT NULL,
	[MEDICINE_QUANTITY_ON_REFILLS] [varchar](max) NULL,
	[MEDICINE_INSTRUCTIONS] [varchar](max) NULL,
	[MEDICINE_STATUS] [varchar](max) NULL,
 CONSTRAINT [PK_IPD_OBSERVATION_MEDICINE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_REPORT_TABLE](
	[ID] [int] NOT NULL,
	[IPD_OBSERVATION_ID_FK] [varchar](max) NOT NULL,
	[PROBLEM] [varchar](max) NULL,
	[PROBLEM_DETAILS] [varchar](max) NULL,
	[SYSTEM_REVIEW] [varchar](max) NULL,
	[ASSESSMENT] [varchar](max) NULL,
	[FUTURE_PLAN] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_OBSERVATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_OBSERVATION_TABLE](
	[ID] [varchar](max) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[OBSERVATION_DATE] [datetime] NOT NULL,
	[OBSERVATION_TIME] [datetime] NOT NULL,
	[DOCTOR_ID_FK] [int] NOT NULL,
	[PATIENT_HEALTH_CONDITION] [int] NOT NULL,
	[TRANSFER_TO_DOCTOR_ID_FK] [int] NULL,
	[WARD_TRANSFER_ID_FK] [int] NULL,
	[NEXT_OBSERVATION_DATE] [datetime] NULL,
	[NEXT_OBSERVATION_TIME] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[IPD_REGISTRATION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[IPD_ID_FK] [int] NOT NULL,
	[REPORT_ID] [varchar](max) NOT NULL,
	[REPORT_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_IPD_REGISTRATION_REPORT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[LOGIN_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LOGIN_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NULL,
	[EMPLOYEE_USERNAME] [varchar](max) NOT NULL,
	[EMPLOYEE_PASSWORD] [varchar](max) NOT NULL,
	[ACCOUNT_ACTIVATION_DATE_TIME] [datetime] NOT NULL,
	[LAST_LOGIN_DATE_TIME] [datetime] NULL,
 CONSTRAINT [PK_TEMPORARY_LOGIN_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_DEGREE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_DEGREE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_DEGREE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICAL_DEGREE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_TEST_PACKAGE_ID_FK] [int] NOT NULL,
	[COMPONENT] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[MEDICAL_TEST_ID_FK] [int] NOT NULL,
	[TEST_DATE] [datetime] NOT NULL,
	[TEST_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_REGISTRATION_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[MEDICAL_TEST_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICAL_TEST_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICAL_TEST] [varchar](max) NOT NULL,
	[MEDICAL_TEST_CHARGE] [int] NOT NULL,
 CONSTRAINT [PK_MEDICAL_TEST_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICINE_NAME_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICINE_NAME_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICINE_TYPE_ID_FK] [varchar](max) NOT NULL,
	[MEDICINE_NAME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICINE_NAME_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MEDICINE_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MEDICINE_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[MEDICINE_TYPE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_MEDICINE_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MESSAGE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MESSAGE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SENDER_ID_FK] [int] NOT NULL,
	[MESSAGE_SUBJECT] [varchar](max) NOT NULL,
	[MESSAGE_CONTENT] [varchar](max) NOT NULL,
	[RECEIVER_ID_FK] [int] NOT NULL,
	[MESSAGE_DATE_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_MESSAGE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[OPD_MEDICAL_TEST_REGISTRATION_ID_FK] [int] NOT NULL,
	[INVOICE_ID] [varchar](max) NOT NULL,
	[INVOICE_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_PRESCRIPTION_REPORT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[REPORT_ID] [varchar](max) NOT NULL,
	[REPORT_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_OPD_PRESCRIPTION_REPORT_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_TREATMENT_MEDICINE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[MEDICINE_TYPE_ID_FK] [int] NOT NULL,
	[MEDICINE_NAME_ID_FK] [int] NOT NULL,
	[MEDICINE_STRENGTH] [varchar](max) NULL,
	[MEDICINE_QUANTITY] [varchar](max) NOT NULL,
	[MEDICINE_START_DATE] [datetime] NOT NULL,
	[MEDICINE_NUMBER_OF_REFILLS] [int] NOT NULL,
	[MEDICINE_QUANTITY_ON_REFILLS] [varchar](max) NULL,
	[MEDICINE_INSTRUCTIONS] [varchar](max) NULL,
 CONSTRAINT [PK_OPD_DIAGNOSIS_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OPD_TREATMENT_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OPD_TREATMENT_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NOT NULL,
	[TREATMENT_DIAGNOSIS] [varchar](max) NOT NULL,
 CONSTRAINT [PK_OPD_DIAGNOSIS_TABLE_1] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_GENERAL_HEALTH]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_GENERAL_HEALTH](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_GENERAL_HEALTH] [varchar](max) NOT NULL,
 CONSTRAINT [PK_PATIENT_GENERAL_HEALTH] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_INDOOR_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_INDOOR_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PATIENT_GENERAL_HEALTH_ID_FK] [int] NOT NULL,
	[PATIENT_REGULAR_MEDICATIONS] [varchar](max) NULL,
	[PATIENT_ALLERGIES_STATUS] [int] NOT NULL,
	[PATIENT_ALLERGIES] [varchar](max) NULL,
	[PATIENT_SURGERY_STATUS] [int] NOT NULL,
	[PATIENT_SURGERY_TYPE_1] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_1] [datetime] NULL,
	[PATIENT_SURGERY_TYPE_2] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_2] [datetime] NULL,
	[PATIENT_SURGERY_TYPE_3] [varchar](max) NULL,
	[PATIENT_SURGERY_DATE_3] [datetime] NULL,
	[PATIENT_MEDICAL_INSURANCE_STATUS] [int] NOT NULL,
	[PATIENT_MEDICAL_INSURANCE_PROVIDER] [varchar](max) NULL,
	[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER] [varchar](max) NULL,
	[PATIENT_HEIGHT] [varchar](max) NOT NULL,
	[PATIENT_WEIGHT] [varchar](max) NOT NULL,
	[PATIENT_BLOOD_GROUP] [varchar](max) NULL,
	[PATIENT_ATTENDING_DOCTOR_ID_FK] [int] NOT NULL,
	[PATIENT_DATE_OF_ADMIT] [datetime] NOT NULL,
	[PATIENT_TIME_OF_ADMIT] [datetime] NOT NULL,
	[PATIENT_REMARK] [varchar](max) NULL,
 CONSTRAINT [PK_PATIENT_INDOOR_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_FIRST_NAME] [varchar](max) NOT NULL,
	[PATIENT_MIDDLE_NAME] [nchar](10) NULL,
	[PATIENT_LAST_NAME] [nchar](10) NULL,
	[PATIENT_DOB] [datetime] NOT NULL,
	[PATIENT_GENDER] [varchar](1) NOT NULL,
	[PATIENT_MARITAL_STATUS] [varchar](1) NULL,
	[PATIENT_FATHER_NAME] [varchar](max) NULL,
	[PATIENT_PRIMARY_ADDRESS] [varchar](max) NOT NULL,
	[PATIENT_SECONDARY_ADDRESS] [varchar](max) NULL,
	[PATIENT_PRIMARY_PHONE] [varchar](max) NOT NULL,
	[PATIENT_SECONDARY_PHONE] [varchar](max) NULL,
	[PATIENT_EMERGENCY_CONTACT_NAME] [varchar](max) NULL,
	[PATIENT_EMERGENCY_CONTACT_NUMBER] [varchar](max) NULL,
	[PATIENT_EMAIL] [varchar](max) NULL,
	[PATIENT_OCCUPATION] [varchar](max) NULL,
	[PATIENT_OCCUPATION_NAME] [varchar](max) NULL,
	[PATIENT_OCCUPATION_ADDRESS] [varchar](max) NULL,
	[PATIENT_MONTHLY_INCOME] [varchar](max) NULL,
	[PATIENT_REFERENCE_FK] [int] NULL,
	[PATIENT_REFERENCE_SOURCE_ID_FK] [int] NULL,
	[PATIENT_PRIMARY_LANGUAGE] [varchar](max) NULL,
	[PATIENT_FAMILY_SIZE] [varchar](max) NULL,
	[PATIENT_REGISTRATION_DATE_TIME] [datetime] NULL,
	[PATIENT_REGISTERED_BY_ID] [int] NULL,
 CONSTRAINT [PK_PATIENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_SUBSCRIBER_RELATIONSHIP] [varchar](max) NOT NULL,
 CONSTRAINT [PK_PATIENT_SUBSCRIBER_RELATIONSHIP_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PATIENT_TYPE] [varchar](3) NOT NULL,
 CONSTRAINT [PK_PATIENT_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PATIENT_WARD_TRANSFER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NULL,
	[PATIENT_ID_FK] [int] NOT NULL,
	[PREVIOUS_WARD_ID_FK] [int] NOT NULL,
	[PREVIOUS_WARD_NUMBER] [int] NOT NULL,
	[TRANSFER_TIME] [datetime] NOT NULL,
	[TRANSFER_DATE] [datetime] NOT NULL,
	[REASON_FOR_TRANSFER] [varchar](max) NOT NULL,
	[NEW_WARD_ID_FK] [int] NOT NULL,
	[NEW_WARD_NUMBER] [int] NOT NULL,
	[SYSTEM_DATE_TIME] [datetime] NOT NULL,
 CONSTRAINT [PK_PATIENT_WARD_TRANSFER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_MASTER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_MASTER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[RECEPTIONIST_MARKS_10] [varchar](max) NOT NULL,
	[RECEPTIONIST_MARKS_12] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[APPOINTMENT_TOKEN] [varchar](max) NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_APPOINTMENT] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALLER_AREA] [varchar](max) NOT NULL,
	[EMERGENCY_DETAILS] [varchar](max) NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_EMERGENCY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALL_FORWARDED_TO] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_FORWARD] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[CALLER_QUERY] [varchar](max) NOT NULL,
	[CALL_OUTCOME] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[CALL_DATE] [datetime] NOT NULL,
	[CALL_TIME] [datetime] NOT NULL,
	[SYSTEM_TIME] [datetime] NOT NULL,
	[CALLER_NAME] [varchar](max) NOT NULL,
	[MESSAGE_FOR] [varchar](max) NOT NULL,
	[MESSAGE_CONTENT] [varchar](max) NOT NULL,
 CONSTRAINT [PK_RECEPTIONIST_PHONE_CALL_MESSAGE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[REFERENCE_SOURCE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[REFERENCE_SOURCE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[REFERENCE_SOURCE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_REFERENCE_SOURCE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[REMINDER_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[REMINDER_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[EMPLOYEE_ID_FK] [int] NOT NULL,
	[REMINDER_TITLE] [varchar](max) NOT NULL,
	[REMINDER_DETAILS] [varchar](max) NULL,
	[REMINDER_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_REMINDER_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ROOM_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ROOM_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ROOM_TYPE_FK] [int] NOT NULL,
	[CASE_FK] [int] NOT NULL,
 CONSTRAINT [PK_ROOM_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[ROOM_TYPE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ROOM_TYPE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ROOM_TYPE] [varchar](max) NOT NULL,
	[ROOM_CHARGE_PER_DAY] [int] NOT NULL,
 CONSTRAINT [PK_ROOM_TYPE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SMS_TEMPLATE_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMS_TEMPLATE_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SMS_TEMPLATE] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SMS_TEMPLATE_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SYMPTOMS_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SYMPTOMS_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[SYMPTOMS] [varchar](max) NOT NULL,
 CONSTRAINT [PK_SYMPTOMS_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[WARD_STATION_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[WARD_STATION_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[WARD_ID_FK] [int] NOT NULL,
	[WARD_NUMBER] [int] NOT NULL,
	[PATIENT_ID_FK] [int] NULL,
	[CASE_ID_FK] [int] NULL,
 CONSTRAINT [PK_WARD_STATION_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[WARD_TABLE]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[WARD_TABLE](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[WARD_NAME] [varchar](max) NOT NULL,
	[WARD_START_NUMBER] [int] NULL,
	[WARD_END_NUMBER] [int] NULL,
	[WARD_NUMBER_OF_BEDS] [int] NULL,
	[WARD_CHARGE] [varchar](max) NULL,
 CONSTRAINT [PK_WARD_TABLE] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[APPOINTMENT_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_INVOICE_TABLE] CHECK CONSTRAINT [FK_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_BODY_PART_TABLE] FOREIGN KEY([BODY_PART_ID_FK])
REFERENCES [dbo].[BODY_PART_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_BODY_PART_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([DOCTOR_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_APPOINTMENT_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[APPOINTMENT_TABLE] CHECK CONSTRAINT [FK_APPOINTMENT_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[CASE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_CASE_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[CASE_MASTER_TABLE] CHECK CONSTRAINT [FK_CASE_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_DEPARTMENT_TABLE] FOREIGN KEY([DOCTOR_DEPARTMENT_FK])
REFERENCES [dbo].[DEPARTMENT_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_DEPARTMENT_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_DOCTOR_MASTER_TABLE_MEDICAL_DEGREE_TABLE] FOREIGN KEY([DOCTOR_DEGREE_FK])
REFERENCES [dbo].[MEDICAL_DEGREE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[DOCTOR_MASTER_TABLE] CHECK CONSTRAINT [FK_DOCTOR_MASTER_TABLE_MEDICAL_DEGREE_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_LEAVE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_LEAVE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_LEAVE_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_LEAVE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_BANK_NAME_TABLE] FOREIGN KEY([EMPLOYEE_BANK_ID_FK])
REFERENCES [dbo].[BANK_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_BANK_NAME_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_EMPLOYEE_TYPE_TABLE] FOREIGN KEY([EMPLOYEE_TYPE_FK])
REFERENCES [dbo].[EMPLOYEE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_MASTER_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_MASTER_TABLE_EMPLOYEE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_SCHEDULE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[EMPLOYEE_SCHEDULE_TABLE] CHECK CONSTRAINT [FK_EMPLOYEE_SCHEDULE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([TRANSFER_TO_EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_IPD_DOCTOR_TRANSFER_TABLE] FOREIGN KEY([TRANSFER_BY_EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_IPD_DOCTOR_TRANSFER_TABLE]
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_DOCTOR_TRANSFER_TABLE] CHECK CONSTRAINT [FK_IPD_DOCTOR_TRANSFER_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_NAME_TABLE] FOREIGN KEY([MEDICINE_NAME_ID_FK])
REFERENCES [dbo].[MEDICINE_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE] CHECK CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_NAME_TABLE]
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_TYPE_TABLE] FOREIGN KEY([MEDICINE_TYPE_ID_FK])
REFERENCES [dbo].[MEDICINE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_OBSERVATION_MEDICINE_TABLE] CHECK CONSTRAINT [FK_IPD_OBSERVATION_MEDICINE_TABLE_MEDICINE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE] CHECK CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_PATIENT_INDOOR_TABLE1] FOREIGN KEY([IPD_ID_FK])
REFERENCES [dbo].[PATIENT_INDOOR_TABLE] ([ID])
GO
ALTER TABLE [dbo].[IPD_REGISTRATION_REPORT_TABLE] CHECK CONSTRAINT [FK_IPD_REGISTRATION_REPORT_TABLE_PATIENT_INDOOR_TABLE1]
GO
ALTER TABLE [dbo].[LOGIN_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_TEMPORARY_LOGIN_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[LOGIN_TABLE] CHECK CONSTRAINT [FK_TEMPORARY_LOGIN_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE_MEDICAL_TEST_TABLE] FOREIGN KEY([MEDICAL_TEST_PACKAGE_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_PACKAGE_COMPONENT_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_PACKAGE_COMPONENT_TABLE_MEDICAL_TEST_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_MEDICAL_TEST_TABLE] FOREIGN KEY([MEDICAL_TEST_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_MEDICAL_TEST_TABLE]
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] CHECK CONSTRAINT [FK_MEDICAL_TEST_REGISTRATION_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MESSAGE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([SENDER_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MESSAGE_TABLE] CHECK CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[MESSAGE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE1] FOREIGN KEY([RECEIVER_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[MESSAGE_TABLE] CHECK CONSTRAINT [FK_MESSAGE_TABLE_EMPLOYEE_MASTER_TABLE1]
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] CHECK CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_MEDICAL_TEST_REGISTRATION_TABLE] FOREIGN KEY([OPD_MEDICAL_TEST_REGISTRATION_ID_FK])
REFERENCES [dbo].[MEDICAL_TEST_REGISTRATION_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE] CHECK CONSTRAINT [FK_OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE_MEDICAL_TEST_REGISTRATION_TABLE]
GO
ALTER TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_PRESCRIPTION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_PRESCRIPTION_REPORT_TABLE] CHECK CONSTRAINT [FK_OPD_PRESCRIPTION_REPORT_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_NAME_TABLE] FOREIGN KEY([MEDICINE_NAME_ID_FK])
REFERENCES [dbo].[MEDICINE_NAME_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE] CHECK CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_NAME_TABLE]
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_TYPE_TABLE] FOREIGN KEY([MEDICINE_TYPE_ID_FK])
REFERENCES [dbo].[MEDICINE_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[OPD_TREATMENT_MEDICINE_TABLE] CHECK CONSTRAINT [FK_OPD_DIAGNOSIS_TABLE_MEDICINE_TYPE_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_DOCTOR_MASTER_TABLE] FOREIGN KEY([PATIENT_ATTENDING_DOCTOR_ID_FK])
REFERENCES [dbo].[DOCTOR_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_DOCTOR_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_GENERAL_HEALTH] FOREIGN KEY([PATIENT_GENERAL_HEALTH_ID_FK])
REFERENCES [dbo].[PATIENT_GENERAL_HEALTH] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_GENERAL_HEALTH]
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_INDOOR_TABLE] CHECK CONSTRAINT [FK_PATIENT_INDOOR_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_MASTER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([PATIENT_REGISTERED_BY_ID])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_MASTER_TABLE] CHECK CONSTRAINT [FK_PATIENT_MASTER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_TYPE_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_TYPE_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_TYPE_TABLE] CHECK CONSTRAINT [FK_PATIENT_TYPE_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE] FOREIGN KEY([NEW_WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE]
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE1] FOREIGN KEY([PREVIOUS_WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[PATIENT_WARD_TRANSFER_TABLE] CHECK CONSTRAINT [FK_PATIENT_WARD_TRANSFER_TABLE_WARD_TABLE1]
GO
ALTER TABLE [dbo].[RECEPTIONIST_MASTER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_MASTER_TABLE_RECEPTIONIST_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_MASTER_TABLE] CHECK CONSTRAINT [FK_RECEPTIONIST_MASTER_TABLE_RECEPTIONIST_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_APPOINTMENT_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_APPOINTMENT] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_APPOINTMENT_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_EMERGENCY_RECEPTIONIST_PHONE_CALL_EMERGENCY] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_EMERGENCY_RECEPTIONIST_PHONE_CALL_EMERGENCY]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_FORWARD_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_FORWARD_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY_EMPLOYEE_MASTER_TABLE1] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY_EMPLOYEE_MASTER_TABLE1]
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE]  WITH CHECK ADD  CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_MESSAGE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] CHECK CONSTRAINT [FK_RECEPTIONIST_PHONE_CALL_MESSAGE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[REMINDER_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_REMINDER_TABLE_EMPLOYEE_MASTER_TABLE] FOREIGN KEY([EMPLOYEE_ID_FK])
REFERENCES [dbo].[EMPLOYEE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[REMINDER_TABLE] CHECK CONSTRAINT [FK_REMINDER_TABLE_EMPLOYEE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[ROOM_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_ROOM_TABLE_CASE_MASTER_TABLE] FOREIGN KEY([CASE_FK])
REFERENCES [dbo].[CASE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[ROOM_TABLE] CHECK CONSTRAINT [FK_ROOM_TABLE_CASE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[ROOM_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_ROOM_TABLE_ROOM_TYPE_TABLE] FOREIGN KEY([ROOM_TYPE_FK])
REFERENCES [dbo].[ROOM_TYPE_TABLE] ([ID])
GO
ALTER TABLE [dbo].[ROOM_TABLE] CHECK CONSTRAINT [FK_ROOM_TABLE_ROOM_TYPE_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_CASE_MASTER_TABLE] FOREIGN KEY([CASE_ID_FK])
REFERENCES [dbo].[CASE_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_CASE_MASTER_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_PATIENT_MASTER_TABLE] FOREIGN KEY([PATIENT_ID_FK])
REFERENCES [dbo].[PATIENT_MASTER_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_PATIENT_MASTER_TABLE]
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE]  WITH CHECK ADD  CONSTRAINT [FK_WARD_STATION_TABLE_WARD_TABLE] FOREIGN KEY([WARD_ID_FK])
REFERENCES [dbo].[WARD_TABLE] ([ID])
GO
ALTER TABLE [dbo].[WARD_STATION_TABLE] CHECK CONSTRAINT [FK_WARD_STATION_TABLE_WARD_TABLE]
GO
/****** Object:  StoredProcedure [dbo].[sp_Common_SearchAllPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Common_SearchAllPatients]

@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE
FROM 
PATIENT_MASTER_TABLE A
WHERE 
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%');
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservation]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservation]

@ipdObservationId varchar(max),
@doctorId int,
@patientId int,
@observationDate datetime,
@observationTime datetime,
@patientHealthCondition int,
@transferToDoctorId int,
@wardTransferId int

AS

INSERT INTO IPD_OBSERVATION_TABLE
(
[ID],
[PATIENT_ID_FK],
[DOCTOR_ID_FK],
[OBSERVATION_DATE],
[OBSERVATION_TIME],
[PATIENT_HEALTH_CONDITION],
[TRANSFER_TO_DOCTOR_ID_FK],
[WARD_TRANSFER_ID_FK]
)
VALUES
(
@ipdObservationId,
@patientId,
@doctorId,
@observationDate,
@observationTime,
@patientHealthCondition,
@transferToDoctorId,
@wardTransferId
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservationMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservationMedicine]

@ipdObservationId varchar(max),
@ipdObservationReportId int,
@medicineTypeId int,
@medicineNameId int,
@medicineStrength varchar(max),
@medicineQuantity varchar(max),
@medicineStartDate datetime,
@numberOfRefills int,
@quantityOnRefills varchar(max),
@medicineInstructions varchar(max)

AS

INSERT INTO IPD_OBSERVATION_MEDICINE_TABLE
(
[IPD_OBSERVATION_ID_FK],
[IPD_OBSERVATION_REPORT_ID_FK],
[MEDICINE_TYPE_ID_FK],
[MEDICINE_NAME_ID_FK],
[MEDICINE_STRENGTH],
[MEDICINE_QUANTITY],
[MEDICINE_START_DATE],
[MEDICINE_NUMBER_OF_REFILLS],
[MEDICINE_QUANTITY_ON_REFILLS],
[MEDICINE_INSTRUCTIONS],
[MEDICINE_STATUS]
)
VALUES
(
@ipdObservationId,
@ipdObservationReportId,
@medicineTypeId,
@medicineNameId,
@medicineStrength,
@medicineQuantity,
@medicineStartDate,
@numberOfRefills,
@quantityOnRefills,
@medicineInstructions,
'Active'
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_AddIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_AddIPDObservationReport]

@ipdObservationReportId int,
@ipdObservationId varchar(max),
@problem varchar(max),
@problemDetails varchar(max),
@systemReview varchar(max),
@assessment varchar(max),
@plan varchar(max)

AS

INSERT INTO IPD_OBSERVATION_REPORT_TABLE
(
[ID],
[IPD_OBSERVATION_ID_FK],
[PROBLEM],
[PROBLEM_DETAILS],
[SYSTEM_REVIEW],
[ASSESSMENT],
[FUTURE_PLAN]
)
VALUES
(
@ipdObservationReportId,
@ipdObservationId,
@problem,
@problemDetails,
@systemReview,
@assessment,
@plan
);

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_ChangeIPDMedicineStatus]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_ChangeIPDMedicineStatus]

@ipdMedicineStatus varchar(max),
@ipdMedicineId int

AS

UPDATE IPD_OBSERVATION_MEDICINE_TABLE
SET
MEDICINE_STATUS=@ipdMedicineStatus
WHERE
ID=@ipdMedicineId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_DeleteIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_DeleteIPDObservationReport]

@ipdObservationReportId int

AS

DELETE FROM
IPD_OBSERVATION_MEDICINE_TABLE
WHERE
IPD_OBSERVATION_REPORT_ID_FK=@ipdObservationReportId;

DELETE FROM
IPD_OBSERVATION_REPORT_TABLE
WHERE
ID=@ipdObservationReportId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAllDoctors]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAllDoctors]

@doctorId int

AS

SELECT
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK AND
A.ID!=@doctorId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAllIPDObservationReports]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAllIPDObservationReports]

@patientId int

AS

SELECT 
A.ID,
A.IPD_OBSERVATION_ID_FK,
A.PROBLEM,
A.PROBLEM_DETAILS,
A.SYSTEM_REVIEW,
A.ASSESSMENT,
A.FUTURE_PLAN,
CONVERT(VARCHAR(11), B.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), B.OBSERVATION_TIME, 108) AS OBSERVATION_TIME
FROM
IPD_OBSERVATION_REPORT_TABLE A,
IPD_OBSERVATION_TABLE B
WHERE
A.IPD_OBSERVATION_ID_FK=B.ID AND
B.PATIENT_ID_FK=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAppointmentDetailsByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAppointmentDetailsByAppointmentToken]

@appointmentToken varchar(max)

AS

SELECT 
CONVERT(VARCHAR(10), APPOINTMENT_DATE, 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), APPOINTMENT_TIME, 108) AS APPOINTMENT_TIME,
PATIENT_ID_FK
FROM
APPOINTMENT_TABLE
WHERE
APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetAppointmentsByDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetAppointmentsByDate]

@doctorId int,
@appointmentDate datetime

AS

SELECT
A.[DOCTOR_ID_FK] AS ID, 
A.[APPOINTMENT_TOKEN],
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE
A.DOCTOR_ID_FK=@doctorId AND
A.PATIENT_ID_FK=B.ID AND
A.APPOINTMENT_DATE=@appointmentDate;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetCalendarAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetCalendarAppointments]

@doctorId int

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK AND
B.DOCTOR_ID_FK=@doctorId
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetCurrentIPDPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetCurrentIPDPatients]

@doctorId int

AS

SELECT
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), B.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(VARCHAR(11), C.OBSERVATION_DATE, 110) AS LAST_OBSERVATION_DATE,
CONVERT(CHAR(5), C.OBSERVATION_TIME, 108) AS LAST_OBSERVATION_TIME,
CONVERT(VARCHAR(11), C.NEXT_OBSERVATION_DATE, 110) AS NEXT_OBSERVATION_DATE,
CONVERT(CHAR(5), C.NEXT_OBSERVATION_TIME, 108) AS NEXT_OBSERVATION_TIME,
D.WARD_NUMBER,
E.WARD_NAME
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE B,
IPD_OBSERVATION_TABLE C,
WARD_STATION_TABLE D,
WARD_TABLE E
WHERE 
A.ID=C.PATIENT_ID_FK AND
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
C.DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.PATIENT_ID_FK=A.ID AND
E.ID=D.WARD_ID_FK;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetDoctorByDepartment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetDoctorByDepartment]

@departmentId int,
@empId int

AS

SELECT 
B.ID,
A.[EMPLOYEE_ID_FK] AS ID, (B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DEPARTMENT
FROM
DOCTOR_MASTER_TABLE A, 
EMPLOYEE_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
B.[ID]=A.[ID] AND 
B.[ID]!=@empId AND
A.[DOCTOR_DEPARTMENT_FK]=@departmentId AND
A.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDActiveMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDActiveMedicines]

@patientId int,
@doctorId int

AS

SELECT DISTINCT
C.ID,
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PROBLEM,
C.MEDICINE_INSTRUCTIONS,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY,
C.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), C.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
C.MEDICINE_STRENGTH,
C.MEDICINE_STATUS,
D.MEDICINE_TYPE,
E.MEDICINE_NAME
FROM
IPD_OBSERVATION_TABLE A,
IPD_OBSERVATION_REPORT_TABLE B,
IPD_OBSERVATION_MEDICINE_TABLE C,
MEDICINE_TYPE_TABLE D,
MEDICINE_NAME_TABLE E
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=@doctorId AND
B.IPD_OBSERVATION_ID_FK=A.ID AND
(C.IPD_OBSERVATION_REPORT_ID_FK=B.ID OR C.IPD_OBSERVATION_REPORT_ID_FK=0) AND
C.IPD_OBSERVATION_ID_FK=A.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_STATUS='Active';

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDAllMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDAllMedicines]

@patientId int,
@doctorId int

AS

SELECT DISTINCT
C.ID,
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PROBLEM,
C.MEDICINE_INSTRUCTIONS,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY,
C.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), C.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
C.MEDICINE_STRENGTH,
C.MEDICINE_STATUS,
D.MEDICINE_TYPE,
E.MEDICINE_NAME
FROM
IPD_OBSERVATION_TABLE A,
IPD_OBSERVATION_REPORT_TABLE B,
IPD_OBSERVATION_MEDICINE_TABLE C,
MEDICINE_TYPE_TABLE D,
MEDICINE_NAME_TABLE E
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=@doctorId AND
B.IPD_OBSERVATION_ID_FK=A.ID AND
(C.IPD_OBSERVATION_REPORT_ID_FK=B.ID OR C.IPD_OBSERVATION_REPORT_ID_FK=0) AND
C.IPD_OBSERVATION_ID_FK=A.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID AND
C.MEDICINE_TYPE_ID_FK=D.ID AND
C.MEDICINE_NAME_ID_FK=E.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDHotCase]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDHotCase]

@doctorId int

AS

SELECT 
CONVERT(VARCHAR(11), A.TRANSFER_DATE, 110) AS TRANSFER_DATE,
CONVERT(CHAR(5), A.TRANSFER_TIME, 108) AS TRANSFER_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
(C.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(C.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(C.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
A.REASON_FOR_TRANSFER
FROM
IPD_DOCTOR_TRANSFER_TABLE A,
PATIENT_MASTER_TABLE B,
EMPLOYEE_MASTER_TABLE C
WHERE
A.TRANSFER_TO_EMPLOYEE_ID_FK=@doctorId AND
A.PATIENT_ID_FK=B.ID AND
A.TRANSFER_BY_EMPLOYEE_ID_FK=C.ID;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationDetailsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationDetailsById]

@ipdObservationId varchar(max)

AS

SELECT 
CONVERT(VARCHAR(11), A.OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), A.OBSERVATION_TIME, 108) AS OBSERVATION_TIME,
B.PATIENT_GENERAL_HEALTH
FROM
IPD_OBSERVATION_TABLE A,
PATIENT_GENERAL_HEALTH B
WHERE
A.PATIENT_HEALTH_CONDITION=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationHistory]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationHistory]

@patientId int,
@doctorId int

AS

SELECT 
ID,
CONVERT(VARCHAR(11), OBSERVATION_DATE, 110) AS OBSERVATION_DATE,
CONVERT(CHAR(5), OBSERVATION_TIME, 108) AS OBSERVATION_TIME
FROM 
IPD_OBSERVATION_TABLE
WHERE 
PATIENT_ID_FK=@patientId AND
DOCTOR_ID_FK=@doctorId;

GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationMedicine]

@ipdObservationId varchar(max)

AS

SELECT 
A.[IPD_OBSERVATION_REPORT_ID_FK],
B.[MEDICINE_TYPE],
C.[MEDICINE_NAME],
A.[MEDICINE_STRENGTH],
A.[MEDICINE_QUANTITY],
CONVERT(VARCHAR(10), A.[MEDICINE_START_DATE], 111) AS MEDICINE_START_DATE,
A.[MEDICINE_NUMBER_OF_REFILLS],
A.[MEDICINE_QUANTITY_ON_REFILLS],
A.[MEDICINE_INSTRUCTIONS]
FROM
IPD_OBSERVATION_MEDICINE_TABLE A,
MEDICINE_TYPE_TABLE B,
MEDICINE_NAME_TABLE C
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId AND
B.ID=A.MEDICINE_TYPE_ID_FK AND
C.ID=A.MEDICINE_NAME_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDObservationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDObservationReport]

@ipdObservationId varchar(max)

AS

SELECT 
ID,
PROBLEM,
PROBLEM_DETAILS,
SYSTEM_REVIEW,
ASSESSMENT,
FUTURE_PLAN
FROM
IPD_OBSERVATION_REPORT_TABLE
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDPatientDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDPatientDetails]

@patientId int,
@doctorId int

AS

SELECT 
A.[PATIENT_ID_FK],
B.PATIENT_GENERAL_HEALTH,
A.[PATIENT_REGULAR_MEDICATIONS],
A.[PATIENT_ALLERGIES_STATUS],
A.[PATIENT_ALLERGIES],
A.[PATIENT_SURGERY_STATUS],
A.[PATIENT_SURGERY_TYPE_1],
A.[PATIENT_SURGERY_DATE_1],
A.[PATIENT_SURGERY_TYPE_2],
A.[PATIENT_SURGERY_DATE_2],
A.[PATIENT_SURGERY_TYPE_3],
A.[PATIENT_SURGERY_DATE_3],
A.[PATIENT_MEDICAL_INSURANCE_STATUS],
A.[PATIENT_MEDICAL_INSURANCE_PROVIDER],
A.[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER],
A.[PATIENT_HEIGHT],
A.[PATIENT_WEIGHT],
A.[PATIENT_BLOOD_GROUP],
A.[PATIENT_ATTENDING_DOCTOR_ID_FK],
CONVERT(VARCHAR(11), A.[PATIENT_DATE_OF_ADMIT], 110) AS PATIENT_DATE_OF_ADMIT,
CONVERT(CHAR(5), A.[PATIENT_TIME_OF_ADMIT], 108) AS PATIENT_TIME_OF_ADMIT,
A.[PATIENT_REMARK]
FROM
PATIENT_INDOOR_TABLE A,
PATIENT_GENERAL_HEALTH B
WHERE
A.PATIENT_ID_FK=@patientId AND
A.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
A.PATIENT_GENERAL_HEALTH_ID_FK=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetIPDReportMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetIPDReportMedicine]

@ipdObservationReportId int,
@ipdObservationId varchar(max)

AS

SELECT
A.MEDICINE_INSTRUCTIONS,
A.MEDICINE_NUMBER_OF_REFILLS,
A.MEDICINE_QUANTITY,
A.MEDICINE_QUANTITY_ON_REFILLS,
CONVERT(VARCHAR(11), A.MEDICINE_START_DATE, 110) AS MEDICINE_START_DATE,
A.MEDICINE_STRENGTH,
B.MEDICINE_TYPE,
C.MEDICINE_NAME
FROM
IPD_OBSERVATION_MEDICINE_TABLE A,
MEDICINE_TYPE_TABLE B,
MEDICINE_NAME_TABLE C
WHERE
IPD_OBSERVATION_ID_FK=@ipdObservationId AND
A.MEDICINE_TYPE_ID_FK=B.ID AND
A.MEDICINE_NAME_ID_FK=C.ID AND
IPD_OBSERVATION_REPORT_ID_FK=@ipdObservationReportId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetNewIPDPatients]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetNewIPDPatients]

@doctorId int

AS

(SELECT
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), B.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(CHAR(5), B.PATIENT_TIME_OF_ADMIT, 108) AS ADMISSION_TIME,
C.WARD_NUMBER,
D.WARD_NAME
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE B,
WARD_STATION_TABLE C,
WARD_TABLE D
WHERE
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.ID=C.WARD_ID_FK
)
EXCEPT
(
SELECT 
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(11), C.PATIENT_DATE_OF_ADMIT, 110) AS ADMISSION_DATE,
CONVERT(CHAR(5), C.PATIENT_TIME_OF_ADMIT, 108) AS ADMISSION_TIME,
D.WARD_NUMBER,
E.WARD_NAME
FROM 
PATIENT_MASTER_TABLE A,
IPD_OBSERVATION_TABLE B,
PATIENT_INDOOR_TABLE C,
WARD_STATION_TABLE D,
WARD_TABLE E
WHERE
A.ID=B.PATIENT_ID_FK AND
B.DOCTOR_ID_FK=@doctorId AND
C.PATIENT_ID_FK=A.ID AND
D.PATIENT_ID_FK=A.ID AND
E.ID=D.WARD_ID_FK
)
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_GetPatientDetailsByIPDObservationID]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_GetPatientDetailsByIPDObservationID]

@ipdObservationId varchar(max)

AS

SELECT 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
PATIENT_MASTER_TABLE A,
IPD_OBSERVATION_TABLE B
WHERE
B.PATIENT_ID_FK=A.ID AND
B.ID=@ipdObservationId;
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_IPDDoctorTransfer]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_IPDDoctorTransfer]

@transferDate datetime,
@transferTime datetime,
@reasonForTransfer varchar(max),
@transferToDoctorId int,
@transferByDoctorId int,
@patientId int

AS

INSERT INTO IPD_DOCTOR_TRANSFER_TABLE
(
[TRANSFER_DATE],
[TRANSFER_TIME],
[REASON_FOR_TRANSFER],
[TRANSFER_TO_EMPLOYEE_ID_FK],
[TRANSFER_BY_EMPLOYEE_ID_FK],
[PATIENT_ID_FK]
)
VALUES
(
@transferDate,
@transferTime,
@reasonForTransfer,
@transferToDoctorId,
@transferByDoctorId,
@patientId
);
SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[sp_Doctor_LeaveApplication]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Doctor_LeaveApplication]

@doctorId int,
@leaveFromDate datetime,
@leaveFromTime datetime,
@leaveToDate datetime,
@leaveToTime datetime,
@leaveReason varchar(max)

AS

INSERT INTO EMPLOYEE_LEAVE_TABLE
(
[EMPLOYEE_ID_FK],
[LEAVE_FROM_DATE],
[LEAVE_FROM_TIME],
[LEAVE_TO_DATE],
[LEAVE_TO_TIME],
[LEAVE_REASON]
)
VALUES
(
@doctorId,
@leaveFromDate,
@leaveFromTime,
@leaveToDate,
@leaveToTime,
@leaveReason
);
GO
/****** Object:  StoredProcedure [dbo].[sp_Mobile_ForgotAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[sp_Mobile_ForgotAppointmentToken]

@patientPhoneNumber varchar(max),
@patientDOB datetime

AS

SELECT TOP 1
A.APPOINTMENT_TOKEN
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE
A.PATIENT_ID_FK=B.ID AND
B.PATIENT_DOB=@patientDOB AND
B.PATIENT_PRIMARY_PHONE=@patientPhoneNumber;
GO
/****** Object:  StoredProcedure [dbo].[spAddAppointmentInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddAppointmentInvoice]

@empId int,
@appointmentToken varchar(max)

AS

INSERT INTO APPOINTMENT_INVOICE_TABLE
(
EMPLOYEE_ID_FK,
INVOICE_ID,
APPOINTMENT_TOKEN,
INVOICE_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM APPOINTMENT_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@appointmentToken,
GETDATE()
);
SELECT INVOICE_ID FROM APPOINTMENT_INVOICE_TABLE
WHERE
INVOICE_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM APPOINTMENT_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddCase]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddCase]
@doctorId int,
@patientId int,
@caseStartDate datetime,
@caseEndDate datetime

AS

INSERT INTO CASE_MASTER_TABLE
(
[DOCTOR_FK],
[PATIENT_FK],
[CASE_START_DATE],
[CASE_END_DATE]
)
VALUES
(
@doctorId,
@patientId,
@caseStartDate,
@caseEndDate
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spAddIpdRegistrationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddIpdRegistrationReport]

@empId int,
@ipdId int

AS

INSERT INTO IPD_REGISTRATION_REPORT_TABLE
(
EMPLOYEE_ID_FK,
REPORT_ID,
IPD_ID_FK,
REPORT_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM IPD_REGISTRATION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@ipdId,
GETDATE()
);
SELECT REPORT_ID FROM IPD_REGISTRATION_REPORT_TABLE
WHERE
REPORT_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM IPD_REGISTRATION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddLastLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddLastLogin]

@empId int

AS

UPDATE LOGIN_TABLE
SET
[LAST_LOGIN_DATE_TIME]=GETDATE()
WHERE
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDMedicalRegistrationInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDMedicalRegistrationInvoice]

@empId int,
@opdMedicalTestRegistrationId int

AS

INSERT INTO OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE
(
EMPLOYEE_ID_FK,
INVOICE_ID,
OPD_MEDICAL_TEST_REGISTRATION_ID_FK,
INVOICE_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@opdMedicalTestRegistrationId,
GETDATE()
);
SELECT INVOICE_ID FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE
WHERE
INVOICE_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE WHERE MONTH(INVOICE_DATE)=MONTH(GETDATE()) AND YEAR(INVOICE_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDMedicalTestRegistration]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDMedicalTestRegistration]

@patientId int,
@medicalTestId int,
@testDate datetime,
@testTime datetime

AS

INSERT INTO MEDICAL_TEST_REGISTRATION_TABLE
(
[PATIENT_ID_FK],
[MEDICAL_TEST_ID_FK],
[TEST_DATE],
[TEST_TIME]
)
VALUES
(
@patientId,
@medicalTestId,
@testDate,
@testTime
);
SELECT SCOPE_IDENTITY();

GO
/****** Object:  StoredProcedure [dbo].[spAddOPDPrescriptionReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDPrescriptionReport]

@empId int,
@appointmentToken varchar(max)

AS

INSERT INTO OPD_PRESCRIPTION_REPORT_TABLE
(
EMPLOYEE_ID_FK,
REPORT_ID,
APPOINTMENT_TOKEN,
REPORT_DATE
)
VALUES
(
@empId,
CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST(1+(SELECT COUNT(*) FROM OPD_PRESCRIPTION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10)),
@appointmentToken,
GETDATE()
);
SELECT REPORT_ID FROM OPD_PRESCRIPTION_REPORT_TABLE
WHERE
REPORT_ID=CAST((@empId) AS VARCHAR(10)) + '-' + CAST(YEAR(GETDATE()) AS VARCHAR(10)) + '-' + CAST(MONTH(GETDATE()) AS VARCHAR(10)) + '-' + CAST((SELECT COUNT(*) FROM OPD_PRESCRIPTION_REPORT_TABLE WHERE MONTH(REPORT_DATE)=MONTH(GETDATE()) AND YEAR(REPORT_DATE)=YEAR(GETDATE())) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDTreatment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDTreatment]

@appointmentToken varchar(max),
@treatmentDiagnosis varchar(max)

AS

INSERT INTO OPD_TREATMENT_TABLE
(
[APPOINTMENT_TOKEN],
[TREATMENT_DIAGNOSIS]
)
VALUES
(
@appointmentToken,
@treatmentDiagnosis
);
GO
/****** Object:  StoredProcedure [dbo].[spAddOPDTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddOPDTreatmentMedicine]

@appointmentToken varchar(max),
@medicineTypeId int,
@medicineNameId int,
@medicineStrength varchar(max),
@medicineQuantity varchar(max),
@medicineStartDate datetime,
@numberOfRefills int,
@quantityOnRefills varchar(max),
@medicineInstructions varchar(max)

AS

INSERT INTO OPD_TREATMENT_MEDICINE_TABLE
(
[APPOINTMENT_TOKEN],
[MEDICINE_TYPE_ID_FK],
[MEDICINE_NAME_ID_FK],
[MEDICINE_STRENGTH],
[MEDICINE_QUANTITY],
[MEDICINE_START_DATE],
[MEDICINE_NUMBER_OF_REFILLS],
[MEDICINE_QUANTITY_ON_REFILLS],
[MEDICINE_INSTRUCTIONS]
)
VALUES
(
@appointmentToken,
@medicineTypeId,
@medicineNameId,
@medicineStrength,
@medicineQuantity,
@medicineStartDate,
@numberOfRefills,
@quantityOnRefills,
@medicineInstructions
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPatientAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPatientAppointment]
@patientId int,
@doctorId int,
@appointmentDate datetime,
@appointmentTime datetime,
@problemBodyPartId int,
@problemDescription varchar(max)

AS

INSERT INTO [APPOINTMENT_TABLE]
(
[APPOINTMENT_TOKEN],
[PATIENT_ID_FK],
[DOCTOR_ID_FK],
[APPOINTMENT_DATE],
[APPOINTMENT_TIME],
[BODY_PART_ID_FK],
[PROBLEM_DESCRIPTION]
)
VALUES
(
CAST(YEAR(@appointmentDate) AS VARCHAR(10)) + CAST(MONTH(@appointmentDate) AS VARCHAR(10)) + CAST(1+(SELECT COUNT(*) FROM APPOINTMENT_TABLE WHERE MONTH(APPOINTMENT_DATE)=MONTH(@appointmentDate) AND YEAR(APPOINTMENT_DATE)=YEAR(@appointmentDate)) AS VARCHAR(10)),
@patientId,
@doctorId,
@appointmentDate,
@appointmentTime,
@problemBodyPartId,
@problemDescription
);
SELECT APPOINTMENT_TOKEN 
FROM APPOINTMENT_TABLE
WHERE 
APPOINTMENT_TOKEN=CAST(YEAR(@appointmentDate) AS VARCHAR(10)) + CAST(MONTH(@appointmentDate) AS VARCHAR(10)) + CAST((SELECT COUNT(*) FROM APPOINTMENT_TABLE WHERE MONTH(APPOINTMENT_DATE)=MONTH(@appointmentDate) AND YEAR(APPOINTMENT_DATE)=YEAR(@appointmentDate)) AS VARCHAR(10));
GO
/****** Object:  StoredProcedure [dbo].[spAddPatientType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPatientType]

@patientId int

AS

INSERT INTO PATIENT_TYPE_TABLE
(
PATIENT_ID_FK,
PATIENT_TYPE
)
VALUES
(
@patientId,
'OUT'
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallAppointment]

@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max)

AS

INSERT INTO [RECEPTIONIST_PHONE_CALL_APPOINTMENT]
(
[EMPLOYEE_ID_FK],
[CALL_DATE],
[CALL_TIME],
[CALLER_NAME]
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
@callerName
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallAppointmentId]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallAppointmentId]

@appointmentToken varchar(max),
@phoneCallId int

AS

UPDATE RECEPTIONIST_PHONE_CALL_APPOINTMENT
SET
APPOINTMENT_TOKEN=@appointmentToken
WHERE
ID=@phoneCallId;
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallEmergency]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallEmergency]

@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callerArea varchar(max),
@emergencyDetails varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_EMERGENCY
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALLER_AREA,
EMERGENCY_DETAILS
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callerArea,
@emergencyDetails
);
GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallForward]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallForward]
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callForwardedTo varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_FORWARD
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALL_FORWARDED_TO
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callForwardedTo
);

GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallGeneralInquiry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallGeneralInquiry] 
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@callerQuery varchar(max),
@callOutcome varchar(max)
AS
INSERT INTO RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
CALLER_QUERY,
CALL_OUTCOME
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@callerQuery,
@callOutcome
);


GO
/****** Object:  StoredProcedure [dbo].[spAddPhoneCallMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddPhoneCallMessage]
@receptionistId int,
@callDate datetime,
@callTime datetime,
@callerName varchar(max),
@messageFor int,
@message varchar(max)

AS

INSERT INTO RECEPTIONIST_PHONE_CALL_MESSAGE
(
EMPLOYEE_ID_FK,
CALL_DATE,
CALL_TIME,
SYSTEM_TIME,
CALLER_NAME,
MESSAGE_FOR,
MESSAGE_CONTENT
)
VALUES
(
@receptionistId,
@callDate,
@callTime,
GETDATE(),
@callerName,
@messageFor,
@message
);

GO
/****** Object:  StoredProcedure [dbo].[spAddReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddReminder]

@empId int,
@reminderTitle varchar(max),
@reminderDetails varchar(max),
@reminderDate datetime

AS

INSERT INTO REMINDER_TABLE
(
EMPLOYEE_ID_FK,
REMINDER_TITLE,
REMINDER_DETAILS,
REMINDER_DATE
)
VALUES
(
@empId,
@reminderTitle,
@reminderDetails,
@reminderDate
);
GO
/****** Object:  StoredProcedure [dbo].[spAddTemporaryLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddTemporaryLogin]

@empId int,
@empUsername varchar(max),
@empPassword varchar(max)

AS

INSERT INTO LOGIN_TABLE
(
[EMPLOYEE_ID_FK],
[EMPLOYEE_USERNAME],
[EMPLOYEE_PASSWORD],
[ACCOUNT_ACTIVATION_DATE_TIME]
)
VALUES
(
@empId,
@empUsername,
@empPassword,
GETDATE()
);
GO
/****** Object:  StoredProcedure [dbo].[spAddWardEntry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spAddWardEntry]

@wardId int,
@wardNumber int,
@patientId int,
@caseId int

AS

UPDATE [WARD_STATION_TABLE]
SET
[PATIENT_ID_FK]=@patientId,
[CASE_ID_FK]=@caseId
WHERE
[WARD_ID_FK]=@wardId
AND
[WARD_NUMBER]=@wardNumber;
GO
/****** Object:  StoredProcedure [dbo].[spCancelAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spCancelAppointment]

@appointmentToken varchar(max)

AS

DELETE FROM APPOINTMENT_TABLE
WHERE 
APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[spChangeEmailAddress]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangeEmailAddress]

@empId int,
@emailAddress varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_EMAIL=@emailAddress
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangePassword]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangePassword]

@empId int,
@password varchar(max)

AS

UPDATE lOGIN_TABLE
SET
EMPLOYEE_PASSWORD=@password
WHERE
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangePrimaryPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangePrimaryPhoneNumber]

@empId int,
@primaryPhoneNumber varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_PRIMARY_PHONE=@primaryPhoneNumber
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spChangeSecondaryPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spChangeSecondaryPhoneNumber]

@empId int,
@secondaryPhoneNumber varchar(max)

AS

UPDATE EMPLOYEE_MASTER_TABLE
SET
EMPLOYEE_SECONDARY_PHONE=@secondaryPhoneNumber
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spCreateNewMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spCreateNewMessage]

@senderId int,
@messageSubject varchar(max),
@messageContent varchar(max),
@receiverId int

AS

INSERT INTO MESSAGE_TABLE
(
[SENDER_ID_FK],
[MESSAGE_SUBJECT],
[MESSAGE_CONTENT],
[RECEIVER_ID_FK],
[MESSAGE_DATE_TIME]
)
VALUES
(
@senderId,
@messageSubject,
@messageContent,
@receiverId,
GETDATE()
); 
GO
/****** Object:  StoredProcedure [dbo].[spDeleteTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spDeleteTreatmentMedicine]

@treatmentMedicineId int

AS

DELETE FROM OPD_TREATMENT_MEDICINE_TABLE
WHERE
ID=@treatmentMedicineId;
GO
/****** Object:  StoredProcedure [dbo].[spEditAppointment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spEditAppointment]

@appointmentToken varchar(max), 
@oldAppointmentDate varchar(max),
@newAppointmentDate datetime, 
@newAppointmentTime datetime

AS

UPDATE 
APPOINTMENT_TABLE
SET
APPOINTMENT_DATE=@newAppointmentDate,
APPOINTMENT_TIME=@newAppointmentTime
WHERE
APPOINTMENT_TOKEN=@appointmentToken AND
APPOINTMENT_DATE=@oldAppointmentDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterEmergencyPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterEmergencyPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_AREA],
[EMERGENCY_DETAILS]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]
WHERE 
[EMPLOYEE_ID_FK]=@empId AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterForwardPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterForwardPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS
  
SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.CALL_FORWARDED_TO=B.ID AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterGeneralInquiryPhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterGeneralInquiryPhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_QUERY],
[CALL_OUTCOME]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]
WHERE 
[EMPLOYEE_ID_FK]=@empId AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterMessagePhoneCall]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterMessagePhoneCall]

@empId int,
@fromDate datetime,
@toDate datetime

AS
  
SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME,
A.[MESSAGE_CONTENT] AS MESSAGE_CONTENT
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.MESSAGE_FOR=B.ID AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)>=@fromDate AND
CONVERT(VARCHAR(10), [CALL_DATE], 111)<=@toDate;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByAfterDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByAfterDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE>=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByBeforeDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByBeforeDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE<=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spFilterRemindersByOnDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spFilterRemindersByOnDate]

@empId int,
@reminderDate datetime

AS

SELECT 
ID,
REMINDER_TITLE,
REMINDER_DETAILS
FROM
REMINDER_TABLE
WHERE
REMINDER_DATE=@reminderDate AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetAccountInfo]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAccountInfo]

@empId int

AS

SELECT A.EMPLOYEE_PHONE, A.EMPLOYEE_EMAIL, B.ACCOUNT_ACTIVATION_DATE_TIME, B.EMPLOYEE_USERNAME, B.EMPLOYEE_PASSWORD, B.LAST_LOGIN_DATE_TIME FROM EMPLOYEE_MASTER_TABLE A, LOGIN_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK
AND
B.EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetAllDoctors]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllDoctors]

AS

SELECT
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B
WHERE
A.ID=B.EMPLOYEE_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetAllEmployees]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllEmployees]

@empId int

AS

SELECT 
ID, (EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM 
EMPLOYEE_MASTER_TABLE
WHERE
ID!=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetAllReminders]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAllReminders]

@empId int

AS

SELECT
ID,
REMINDER_TITLE,
REMINDER_DETAILS,
CONVERT(VARCHAR(11), REMINDER_DATE, 110) AS REMINDER_DATE 
FROM
REMINDER_TABLE
WHERE 
EMPLOYEE_ID_FK=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetAppointmentInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetAppointmentInvoice]

AS

SELECT 
B.INVOICE_ID,
A.APPOINTMENT_TOKEN,
INVOICE_DATE,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
(D.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(D.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(D.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME

FROM

APPOINTMENT_TABLE A,
APPOINTMENT_INVOICE_TABLE B,
PATIENT_MASTER_TABLE C,
EMPLOYEE_MASTER_TABLE D

WHERE

A.DOCTOR_ID_FK=D.ID AND
A.PATIENT_ID_FK=C.ID AND
B.APPOINTMENT_TOKEN=A.APPOINTMENT_TOKEN AND
D.ID=A.DOCTOR_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarDoctorAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarDoctorAppointments]

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarDoctorAppointmentsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarDoctorAppointmentsById]

@doctorId int

AS

SELECT CAST(B.APPOINTMENT_DATE AS DATE) AS APPOINTMENT_DATE, COUNT(B.APPOINTMENT_DATE) AS APPOINTMENT_COUNT
FROM
APPOINTMENT_TABLE B, DOCTOR_MASTER_TABLE A
WHERE 
A.ID=B.DOCTOR_ID_FK AND
B.DOCTOR_ID_FK=@doctorId
GROUP BY B.APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarReminder]

@empId int

AS

SELECT COUNT([REMINDER_DATE]) AS REMINDER_COUNT, CONVERT(VARCHAR(10), [REMINDER_DATE], 111) AS REMINDER_DATE
FROM REMINDER_TABLE
WHERE EMPLOYEE_ID_FK=@empId
GROUP BY REMINDER_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetCalendarReminderInfo]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetCalendarReminderInfo]

@reminderDate datetime,
@empId int

AS

SELECT * FROM REMINDER_TABLE
WHERE
REMINDER_DATE=@reminderDate AND
EMPLOYEE_ID_FK=@empId;

GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentByDateTime]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentByDateTime]

@empId int,
@appointmentDate datetime,
@appointmentTime datetime

AS

SELECT *
FROM
APPOINTMENT_TABLE
WHERE
DOCTOR_ID_FK=@empId AND
CONVERT(VARCHAR(11), APPOINTMENT_DATE, 110)=CONVERT(VARCHAR(11), @appointmentDate, 110) AND
CONVERT(CHAR(5), APPOINTMENT_TIME, 108)=CONVERT(CHAR(5), @appointmentTime, 108)
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointments]

@empId int

AS

SELECT 
COUNT(ID) APPOINTMENT_COUNT,
APPOINTMENT_DATE
FROM
APPOINTMENT_TABLE
WHERE
DOCTOR_ID_FK=@empId
GROUP BY APPOINTMENT_DATE;
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentsByDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentsByDate]

@appointmentDate datetime

AS

SELECT
A.[DOCTOR_ID_FK] AS ID, 
A.[APPOINTMENT_TOKEN],
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
EMPLOYEE_MASTER_TABLE B,
PATIENT_MASTER_TABLE C,
DOCTOR_MASTER_TABLE D
WHERE
A.DOCTOR_ID_FK=D.ID AND
D.EMPLOYEE_ID_FK=B.ID AND
A.PATIENT_ID_FK=C.ID AND
A.APPOINTMENT_DATE=@appointmentDate;
 
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorAppointmentsById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorAppointmentsById]

@doctorId int

AS

SELECT 
A.[APPOINTMENT_TOKEN],
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, ' ')) AS PATIENT_NAME
FROM
APPOINTMENT_TABLE A,
PATIENT_MASTER_TABLE B
WHERE A.PATIENT_ID_FK=B.ID
AND A.[APPOINTMENT_DATE]>=GETDATE();
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorByAppointmentDate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorByAppointmentDate]

@appointmentDate datetime

AS

SELECT 
A.ID,
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B,
APPOINTMENT_TABLE C
WHERE
A.ID=B.EMPLOYEE_ID_FK AND
C.DOCTOR_ID_FK=A.ID AND
C.APPOINTMENT_DATE=@appointmentDate;
 
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorByDepartment]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorByDepartment]
@departmentId int

AS

SELECT 
B.ID,
A.[EMPLOYEE_ID_FK] AS ID, (B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DEPARTMENT
FROM
DOCTOR_MASTER_TABLE A, 
EMPLOYEE_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
B.[ID]=A.[ID] AND 
A.[DOCTOR_DEPARTMENT_FK]=@departmentId AND
A.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetDoctorNameByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetDoctorNameByAppointmentToken]

@appointmentToken varchar(max)

AS

SELECT (A.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM
EMPLOYEE_MASTER_TABLE A,
APPOINTMENT_TABLE B
WHERE 
B.APPOINTMENT_TOKEN=@appointmentToken AND
A.ID=B.DOCTOR_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeLeave]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeLeave]

@empId int
 
AS
 
SELECT
CONVERT(VARCHAR(10), [LEAVE_FROM_DATE], 111) AS FROM_DATE,
CONVERT(CHAR(5), [LEAVE_FROM_TIME], 108) AS FROM_TIME,
CONVERT(VARCHAR(10), [LEAVE_TO_DATE], 111) AS TO_DATE,
CONVERT(CHAR(5), [LEAVE_TO_TIME], 108) AS TO_TIME 
FROM EMPLOYEE_LEAVE_TABLE
WHERE
LEAVE_TO_DATE>=GETDATE() AND
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeName]

@empId int

AS

SELECT (A.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME 
FROM 
[EMPLOYEE_MASTER_TABLE] A, [LOGIN_TABLE] B
WHERE 
A.ID=B.EMPLOYEE_ID_FK AND
B.EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeNameById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeNameById]

@empId int

AS

SELECT 
(EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME
FROM
EMPLOYEE_MASTER_TABLE
WHERE
ID=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetEmployeeSchedule]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetEmployeeSchedule]

@empId int

AS

SELECT 
CONVERT(CHAR(5), [MON_SESS1_FROM], 108) AS [MON_SESS1_FROM],
CONVERT(CHAR(5), [MON_SESS1_TO], 108) AS [MON_SESS1_TO],
CONVERT(CHAR(5), [MON_SESS2_FROM], 108) AS [MON_SESS2_FROM],
CONVERT(CHAR(5), [MON_SESS2_TO], 108) AS [MON_SESS2_TO],
CONVERT(CHAR(5), [MON_SESS3_FROM], 108) AS [MON_SESS3_FROM],
CONVERT(CHAR(5), [MON_SESS3_TO], 108) AS [MON_SESS3_TO],
CONVERT(CHAR(5), [TUE_SESS1_FROM], 108) AS [TUE_SESS1_FROM],
CONVERT(CHAR(5), [TUE_SESS1_TO], 108) AS [TUE_SESS1_TO],
CONVERT(CHAR(5), [TUE_SESS2_FROM], 108) AS [TUE_SESS2_FROM],
CONVERT(CHAR(5), [TUE_SESS2_TO], 108) AS [TUE_SESS2_TO],
CONVERT(CHAR(5), [TUE_SESS3_FROM], 108) AS [TUE_SESS3_FROM],
CONVERT(CHAR(5), [TUE_SESS3_TO], 108) AS [TUE_SESS3_TO],
CONVERT(CHAR(5), [WED_SESS1_FROM], 108) AS [WED_SESS1_FROM],
CONVERT(CHAR(5), [WED_SESS1_TO], 108) AS [WED_SESS1_TO],
CONVERT(CHAR(5), [WED_SESS2_FROM], 108) AS [WED_SESS2_FROM],
CONVERT(CHAR(5), [WED_SESS2_TO], 108) AS [WED_SESS2_TO],
CONVERT(CHAR(5), [WED_SESS3_FROM], 108) AS [WED_SESS3_FROM],
CONVERT(CHAR(5), [WED_SESS3_TO], 108) AS [WED_SESS3_TO],
CONVERT(CHAR(5), [THU_SESS1_FROM], 108) AS [THU_SESS1_FROM],
CONVERT(CHAR(5), [THU_SESS1_TO], 108) AS [THU_SESS1_TO],
CONVERT(CHAR(5), [THU_SESS2_FROM], 108) AS [THU_SESS2_FROM],
CONVERT(CHAR(5), [THU_SESS2_TO], 108) AS [THU_SESS2_TO],
CONVERT(CHAR(5), [THU_SESS3_FROM], 108) AS [THU_SESS3_FROM],
CONVERT(CHAR(5), [THU_SESS3_TO], 108) AS [THU_SESS3_TO],
CONVERT(CHAR(5), [FRI_SESS1_FROM], 108) AS [FRI_SESS1_FROM],
CONVERT(CHAR(5), [FRI_SESS1_TO], 108) AS [FRI_SESS1_TO],
CONVERT(CHAR(5), [FRI_SESS2_FROM], 108) AS [FRI_SESS2_FROM],
CONVERT(CHAR(5), [FRI_SESS2_TO], 108) AS [FRI_SESS2_TO],
CONVERT(CHAR(5), [FRI_SESS3_FROM], 108) AS [FRI_SESS3_FROM],
CONVERT(CHAR(5), [FRI_SESS3_TO], 108) AS [FRI_SESS3_TO],
CONVERT(CHAR(5), [SAT_SESS1_FROM], 108) AS [SAT_SESS1_FROM],
CONVERT(CHAR(5), [SAT_SESS1_TO], 108) AS [SAT_SESS1_TO],
CONVERT(CHAR(5), [SAT_SESS2_FROM], 108) AS [SAT_SESS2_FROM],
CONVERT(CHAR(5), [SAT_SESS2_TO], 108) AS [SAT_SESS2_TO],
CONVERT(CHAR(5), [SAT_SESS3_FROM], 108) AS [SAT_SESS3_FROM],
CONVERT(CHAR(5), [SAT_SESS3_TO], 108) AS [SAT_SESS3_TO],
CONVERT(CHAR(5), [SUN_SESS1_FROM], 108) AS [SUN_SESS1_FROM],
CONVERT(CHAR(5), [SUN_SESS1_TO], 108) AS [SUN_SESS1_TO],
CONVERT(CHAR(5), [SUN_SESS2_FROM], 108) AS [SUN_SESS2_FROM],
CONVERT(CHAR(5), [SUN_SESS2_TO], 108) AS [SUN_SESS2_TO],
CONVERT(CHAR(5), [SUN_SESS3_FROM], 108) AS [SUN_SESS3_FROM],
CONVERT(CHAR(5), [SUN_SESS3_TO], 108) AS [SUN_SESS3_TO]
FROM
EMPLOYEE_SCHEDULE_TABLE
WHERE 
EMPLOYEE_ID_FK=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetInbox]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetInbox]

@empId int

AS

SELECT 
A.ID,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS SENDER,
A.MESSAGE_SUBJECT,
CONVERT(VARCHAR(10), A.MESSAGE_DATE_TIME, 111) AS MESSAGE_DATE,
CONVERT(CHAR(5), A.MESSAGE_DATE_TIME, 108) AS MESSAGE_TIME 
FROM
MESSAGE_TABLE A,
EMPLOYEE_MASTER_TABLE B
WHERE RECEIVER_ID_FK=@empId AND
A.SENDER_ID_FK=B.ID
ORDER BY MESSAGE_DATE_TIME;
GO
/****** Object:  StoredProcedure [dbo].[spGetIPDRegistrationReport]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetIPDRegistrationReport]

AS

SELECT
A.REPORT_ID,
A.REPORT_DATE,
(C.PATIENT_FIRST_NAME + ' ' + ISNULL(C.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(C.PATIENT_LAST_NAME, '')) AS PATIENT_NAME

FROM

IPD_REGISTRATION_REPORT_TABLE A,
PATIENT_INDOOR_TABLE B,
PATIENT_MASTER_TABLE C

WHERE
A.IPD_ID_FK=B.ID AND
B.PATIENT_ID_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicalTestById]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicalTestById]

@medicalTestId int

AS

SELECT 
MEDICAL_TEST
FROM
MEDICAL_TEST_TABLE
WHERE 
ID=@medicalTestId;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicalTestCharges]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicalTestCharges]

AS

SELECT
ID,
MEDICAL_TEST,
MEDICAL_TEST_CHARGE
FROM
MEDICAL_TEST_TABLE;
GO
/****** Object:  StoredProcedure [dbo].[spGetMedicineNameByType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetMedicineNameByType]

@medicineTypeId int

AS

SELECT 
ID,
MEDICINE_NAME
FROM
MEDICINE_NAME_TABLE
WHERE
MEDICINE_TYPE_ID_FK=@medicineTypeId;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDMedicalTestRegistrationInvoice]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDMedicalTestRegistrationInvoice]

AS

SELECT
C.INVOICE_ID,
C.INVOICE_DATE,
(B.PATIENT_FIRST_NAME + ' ' + ISNULL(B.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(B.PATIENT_LAST_NAME, '')) AS PATIENT_NAME
FROM
MEDICAL_TEST_REGISTRATION_TABLE A,
PATIENT_MASTER_TABLE B,
OPD_MEDICAL_TEST_REGISTRATION_INVOICE_TABLE C
WHERE
A.PATIENT_ID_FK=B.ID AND
C.OPD_MEDICAL_TEST_REGISTRATION_ID_FK=A.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDPatientDetailsForBilling]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDPatientDetailsForBilling]

@patientId int

AS

SELECT 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
A.PATIENT_GENDER,
DATEDIFF(hour,A.PATIENT_DOB,GETDATE())/8766 AS PATIENT_AGE,
CONVERT(VARCHAR(10), B.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), B.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
A.PATIENT_REGISTRATION_DATE_TIME,
(C.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(C.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(C.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
PATIENT_MASTER_TABLE A,
APPOINTMENT_TABLE B,
EMPLOYEE_MASTER_TABLE C
WHERE
A.ID=@patientId AND
B.PATIENT_ID_FK=@patientId AND
C.ID=B.DOCTOR_ID_FK;

GO
/****** Object:  StoredProcedure [dbo].[spGetOPDTreatmentAllMedicines]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDTreatmentAllMedicines]

@patientId int

AS

SELECT
A.MEDICINE_NAME,
B.MEDICINE_TYPE,
C.MEDICINE_STRENGTH,
C.MEDICINE_QUANTITY,
CONVERT(VARCHAR(10), C.MEDICINE_START_DATE, 111) AS MEDICINE_START_DATE,
C.MEDICINE_NUMBER_OF_REFILLS,
C.MEDICINE_QUANTITY_ON_REFILLS,
C.MEDICINE_INSTRUCTIONS
FROM
MEDICINE_NAME_TABLE A,
MEDICINE_TYPE_TABLE B,
OPD_TREATMENT_MEDICINE_TABLE C,
APPOINTMENT_TABLE D
WHERE
C.MEDICINE_TYPE_ID_FK=B.ID AND
C.MEDICINE_NAME_ID_FK=A.ID AND
C.APPOINTMENT_TOKEN=D.APPOINTMENT_TOKEN AND
D.PATIENT_ID_FK=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[spGetOPDTreatmentMedicine]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetOPDTreatmentMedicine]

@appointmentToken varchar(max)

AS

SELECT
A.ID,
C.MEDICINE_TYPE,
B.MEDICINE_NAME,
A.MEDICINE_STRENGTH,
A.MEDICINE_QUANTITY,
CONVERT(VARCHAR(10), A.MEDICINE_START_DATE, 111) AS MEDICINE_START_DATE,
A.MEDICINE_NUMBER_OF_REFILLS,
A.MEDICINE_QUANTITY_ON_REFILLS,
A.MEDICINE_INSTRUCTIONS
FROM
OPD_TREATMENT_MEDICINE_TABLE A,
MEDICINE_NAME_TABLE B,
MEDICINE_TYPE_TABLE C 
WHERE
A.APPOINTMENT_TOKEN=@appointmentToken AND
A.MEDICINE_TYPE_ID_FK=C.ID AND
A.MEDICINE_NAME_ID_FK=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientAppointmentHistory]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientAppointmentHistory]

@patientId int

AS

SELECT 
A.APPOINTMENT_TOKEN,
CONVERT(VARCHAR(10), A.[APPOINTMENT_DATE], 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), A.[APPOINTMENT_TIME], 108) AS APPOINTMENT_TIME,
(B.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(B.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(B.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME
FROM
APPOINTMENT_TABLE A,
EMPLOYEE_MASTER_TABLE B
WHERE
A.PATIENT_ID_FK=@patientId AND
A.DOCTOR_ID_FK=B.ID AND
A.APPOINTMENT_DATE<GETDATE();
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientAppointments]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientAppointments]
@appointmentToken varchar(max)

AS

SELECT CAST(A.APPOINTMENT_DATE AS DATE) [DATE], CAST(A.APPOINTMENT_TIME AS TIME) [TIME], C.EMPLOYEE_NAME AS DOCTOR_NAME FROM [APPOINTMENT_TABLE] A, [DOCTOR_MASTER_TABLE] B, [EMPLOYEE_MASTER_TABLE] C
WHERE
A.APPOINTMENT_TOKEN=@appointmentToken
AND
B.ID=A.DOCTOR_ID_FK
AND
C.ID=B.EMPLOYEE_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientDetails]

@patientId int

AS

SELECT 
B.PREFIX,
A.[PATIENT_FIRST_NAME],
A.[PATIENT_LAST_NAME],
A.[PATIENT_DOB],
C.MARITAL_STATUS,
D.GENDER,
A.[PATIENT_STREET_ADDRESS],
A.[PATIENT_CITY],
A.[PATIENT_ZIP_CODE],
A.[PATIENT_STATE],
A.[PATIENT_COUNTRY],
A.[PATIENT_PRIMARY_PHONE],
A.[PATIENT_SECONDARY_PHONE],
A.[PATIENT_EMERGENCY_CONTACT],
A.[PATIENT_EMERGENCY_PHONE],
A.[PATIENT_EMAIL],
E.OCCUPATION,
A.[PATIENT_EMPLOYER_NAME],
A.[PATIENT_EMPLOYER_STREET_ADDRESS],
A.[PATIENT_EMPLOYER_CITY],
A.[PATIENT_EMPLOYER_STATE],
A.[PATIENT_EMPLOYER_COUNTRY],
A.[PATIENT_LANGUAGE],
A.[PATIENT_REFERENCE],
A.[PATIENT_FAMILY_SIZE],
A.[PATIENT_MONTHLY_INCOME],
F.REFERENCE_SOURCE,
A.[PATIENT_REGISTRATION_DATE_TIME]

FROM PATIENT_MASTER_TABLE A, PREFIX_TABLE B, MARITAL_STATUS_TABLE C, GENDER_TABLE D, PATIENT_OCCUPATION_TABLE E, REFERENCE_SOURCE_TABLE F
WHERE
A.PATIENT_NAME_PREFIX_FK=B.ID AND
A.PATIENT_MARITAL_STATUS_FK=C.ID AND
A.PATIENT_GENDER_FK=D.ID AND
A.PATIENT_OCCUPATION_FK=E.ID AND
A.PATIENT_REFERENCE_SOURCE_FK=F.ID AND
A.ID=@patientId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPatientInfoByAppointmentToken]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPatientInfoByAppointmentToken]
@appointmentToken varchar(max)

AS

SELECT 
A.ID,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME,
CONVERT(VARCHAR(10), A.PATIENT_DOB, 111) AS PATIENT_DOB,
A.PATIENT_PRIMARY_PHONE,
CONVERT(VARCHAR(10), B.APPOINTMENT_DATE, 111) AS APPOINTMENT_DATE,
CONVERT(CHAR(5), B.APPOINTMENT_TIME, 108) AS APPOINTMENT_TIME
FROM 
[PATIENT_MASTER_TABLE] A, 
[APPOINTMENT_TABLE] B
WHERE
A.ID=B.PATIENT_ID_FK AND
B.APPOINTMENT_TOKEN=@appointmentToken;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallEmergency]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallEmergency]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_AREA],
[EMERGENCY_DETAILS]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_EMERGENCY]
WHERE 
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallForward]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallForward]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_FORWARD] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.CALL_FORWARDED_TO=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallGeneralInquiry]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallGeneralInquiry]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), [CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), [CALL_TIME], 108) AS CALL_TIME,
[CALLER_NAME],
[CALLER_QUERY],
[CALL_OUTCOME]
FROM [HMS].[dbo].[RECEPTIONIST_PHONE_CALL_GENERAL_INQUIRY]
WHERE 
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spGetPhoneCallMessage]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPhoneCallMessage]

@empId int

AS

SELECT       
CONVERT(VARCHAR(10), A.[CALL_DATE], 111) AS CALL_DATE,
CONVERT( CHAR(5), A.[CALL_TIME], 108) AS CALL_TIME,
A.[CALLER_NAME] AS CALLER_NAME,
B.[EMPLOYEE_FIRST_NAME] + ' ' + B.[EMPLOYEE_LAST_NAME] AS EMPLOYEE_NAME,
A.[MESSAGE_CONTENT] AS MESSAGE_CONTENT
FROM 
[HMS].[dbo].[RECEPTIONIST_PHONE_CALL_MESSAGE] A,
[HMS].[dbo].[EMPLOYEE_MASTER_TABLE] B
WHERE 
A.EMPLOYEE_ID_FK=@empId
AND
A.MESSAGE_FOR=B.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetPresentEmployees]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetPresentEmployees]

AS

SELECT A.EMPLOYEE_FIRST_NAME + ' ' + A.EMPLOYEE_LAST_NAME AS EMPLOYEE_NAME, C.EMPLOYEE_TYPE, CONVERT(CHAR(5), A.EMPLOYEE_SHIFT_START_TIME, 108) AS SHIFT_START_TIME, CONVERT(CHAR(5), A.EMPLOYEE_SHIFT_END_TIME, 108) AS SHIFT_END_TIME, CONVERT(CHAR(5), B.LAST_LOGIN_DATE_TIME, 108) AS LOGIN_TIME
FROM EMPLOYEE_MASTER_TABLE A, LOGIN_TABLE B, EMPLOYEE_TYPE_TABLE C
WHERE CONVERT(VARCHAR(10), B.LAST_LOGIN_DATE_TIME, 111)=CONVERT(VARCHAR(10), GETDATE(), 111) AND
A.ID=B.EMPLOYEE_ID_FK AND
A.EMPLOYEE_TYPE_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spGetRoomDetails]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetRoomDetails]

@wardId int,
@wardNumber int

AS

SELECT
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_GENDER, 
A.PATIENT_DOB, 
A.PATIENT_PRIMARY_ADDRESS, 
A.PATIENT_PRIMARY_PHONE, 
A.PATIENT_EMAIL, 
(D.EMPLOYEE_FIRST_NAME + ' ' + ISNULL(D.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(D.EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME, 
E.CASE_ID_FK, 
C.PATIENT_DATE_OF_ADMIT, 
C.PATIENT_TIME_OF_ADMIT, 
C.PATIENT_REMARK  
FROM
PATIENT_MASTER_TABLE A,
PATIENT_INDOOR_TABLE C,
EMPLOYEE_MASTER_TABLE D,
WARD_STATION_TABLE E
WHERE 
A.ID=E.PATIENT_ID_FK AND
C.PATIENT_ID_FK=E.PATIENT_ID_FK AND
C.PATIENT_ATTENDING_DOCTOR_ID_FK=D.ID AND
E.WARD_ID_FK=@wardId AND
E.WARD_NUMBER=@wardNumber;

GO
/****** Object:  StoredProcedure [dbo].[spGetSMSTemplate]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetSMSTemplate]

@templateId int

AS

SELECT 
SMS_TEMPLATE
FROM SMS_TEMPLATE_TABLE
WHERE
ID=@templateId;

GO
/****** Object:  StoredProcedure [dbo].[spGetWardCharge]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetWardCharge]

AS

SELECT 
WARD_NAME, WARD_CHARGE
FROM
WARD_TABLE;
GO
/****** Object:  StoredProcedure [dbo].[spGetWardNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spGetWardNumber]
@wardId int

AS 

SELECT [WARD_NUMBER]
  FROM [HMS].[dbo].[WARD_STATION_TABLE]
  WHERE [PATIENT_ID_FK] IS NULL AND [WARD_ID_FK]=@wardId;
GO
/****** Object:  StoredProcedure [dbo].[spLastLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spLastLogin]

@empId int

AS

UPDATE LOGIN_TABLE
SET
[LAST_LOGIN_DATE_TIME]=GETDATE()
WHERE
[EMPLOYEE_ID_FK]=@empId;
GO
/****** Object:  StoredProcedure [dbo].[spLogin]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spLogin]

@empUsername varchar(max),
@empPassword varchar(max)

AS

SELECT [EMPLOYEE_ID_FK] FROM [LOGIN_TABLE]
WHERE
[EMPLOYEE_USERNAME]=@empUsername
AND
[EMPLOYEE_PASSWORD]=@empPassword;
GO
/****** Object:  StoredProcedure [dbo].[spPatientWardTransfer]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spPatientWardTransfer] 

@patientId int,
@previousWardId int,
@previousWardNumber int,
@transferTime datetime,
@transferDate datetime,
@reasonForTransfer varchar(max),
@newWardId int,
@newWardNumber int,
@empId int

AS

INSERT INTO PATIENT_WARD_TRANSFER_TABLE
(
[PATIENT_ID_FK],
[PREVIOUS_WARD_ID_FK],
[PREVIOUS_WARD_NUMBER],
[TRANSFER_TIME],
[TRANSFER_DATE],
[REASON_FOR_TRANSFER],
[NEW_WARD_ID_FK],
[NEW_WARD_NUMBER],
[EMPLOYEE_ID_FK],
[SYSTEM_DATE_TIME]
)
VALUES
(
@patientId,
@previousWardId,
@previousWardNumber,
@transferTime,
@transferDate,
@reasonForTransfer,
@newWardId,
@newWardNumber,
@empId,
GETDATE()
);

UPDATE WARD_STATION_TABLE
SET
CASE_ID_FK=(SELECT CASE_ID_FK FROM WARD_STATION_TABLE WHERE PATIENT_ID_FK=@patientId),
PATIENT_ID_FK=@patientId
WHERE 
WARD_ID_FK=@newWardId AND
WARD_NUMBER=@newWardNumber;


UPDATE WARD_STATION_TABLE
SET
CASE_ID_FK=NULL,
PATIENT_ID_FK=NULL
WHERE
WARD_ID_FK=@previousWardId AND
WARD_NUMBER=@previousWardNumber AND
PATIENT_ID_FK=@patientId;

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spRegisterDoctor]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterDoctor]
@doctorEmpId int,
@doctorLicenseNumber varchar(max),
@doctorDepartment int,
@doctorDegree int,
@doctorUniversityName varchar(max), 
@doctorUniversityCity varchar(max),
@doctorUniversityState varchar(max), 
@doctorUniversityCountry varchar(max),
@doctorExperience int

AS

INSERT INTO DOCTOR_MASTER_TABLE
(
[EMPLOYEE_ID_FK],
[DOCTOR_LICENSE_NUMBER],
[DOCTOR_DEPARTMENT_FK],
[DOCTOR_DEGREE_FK],
[DOCTOR_UNIVERSITY_NAME],
[DOCTOR_UNIVERSITY_CITY],
[DOCTOR_UNIVERSITY_STATE],
[DOCTOR_UNIVERSITY_COUNTRY],
[DOCTOR_EXPERIENCE]
)
VALUES
(
@doctorEmpId,
@doctorLicenseNumber,
@doctorDepartment,
@doctorDegree,
@doctorUniversityName,
@doctorUniversityCity,
@doctorUniversityState,
@doctorUniversityCountry,
@doctorExperience)
GO
/****** Object:  StoredProcedure [dbo].[spRegisterEmployee]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterEmployee]
@empName varchar(max),
@empGender varchar(1),
@empDOB datetime,
@empAddress varchar(max),
@empPhoneNumber varchar(max),
@empEmailAddress varchar(max),
@empType int,
@empDateOfJoin datetime,
@empDateOfLeave datetime,
@empBank int,
@empAccountNumber varchar(max)

AS

INSERT INTO EMPLOYEE_MASTER_TABLE
(
[EMPLOYEE_NAME],
[EMPLOYEE_ADDRESS],
[EMPLOYEE_GENDER],
[EMPLOYEE_DOB],
[EMPLOYEE_DATE_OF_JOINING],
[EMPLOYEE_DATE_LEAVE],
[EMPLOYEE_TYPE_FK],
[EMPLOYEE_BANK_ID_FK],
[EMPLOYEE_BANK_ACCOUNT_NUMBER],
[EMPLOYEE_EMAIL],
[EMPLOYEE_PHONE]
)
VALUES
(
@empName,
@empAddress,
@empGender,
@empDOB,
@empDateOfJoin,
@empDateOfLeave,
@empType,
@empBank,
@empAccountNumber,
@empEmailAddress,
@empPhoneNumber
)

SELECT SCOPE_IDENTITY();

GO
/****** Object:  StoredProcedure [dbo].[spRegisterIndoorPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterIndoorPatient]
@patientId int,
@patientGeneralHealth int,
@patientRegularMedications varchar(max),
@patientAllergyStatus int,
@patientAllergies varchar(max),
@patientPastSurgeryStatus int,
@patientSurgery1 varchar(max),
@patientSurgery1Date datetime,
@patientSurgery2 varchar(max),
@patientSurgery2Date datetime,
@patientSurgery3 varchar(max),
@patientSurgery3Date datetime,
@patientMedicalInsuranceStatus int,
@patientMedicalInsuranceProvider varchar(max),
@patientMedicalInsurancePolicyNumber varchar(max),
@patientHeight varchar(max),
@patientWeight varchar(max),
@patientBloodGroup varchar(max),
@patientAttendingDoctor int,
@patientDateOfAdmit datetime,
@patientTimeOfAdmit datetime,
@patientRemark varchar(max)

AS

INSERT INTO PATIENT_INDOOR_TABLE
(
[PATIENT_ID_FK],
[PATIENT_GENERAL_HEALTH_ID_FK],
[PATIENT_REGULAR_MEDICATIONS],
[PATIENT_ALLERGIES_STATUS],
[PATIENT_ALLERGIES],
[PATIENT_SURGERY_STATUS],
[PATIENT_SURGERY_TYPE_1],
[PATIENT_SURGERY_DATE_1],
[PATIENT_SURGERY_TYPE_2],
[PATIENT_SURGERY_DATE_2],
[PATIENT_SURGERY_TYPE_3],
[PATIENT_SURGERY_DATE_3],
[PATIENT_MEDICAL_INSURANCE_STATUS],
[PATIENT_MEDICAL_INSURANCE_PROVIDER],
[PATIENT_MEDICAL_INSURANCE_POLICY_NUMBER],
[PATIENT_HEIGHT],
[PATIENT_WEIGHT],
[PATIENT_BLOOD_GROUP],
[PATIENT_ATTENDING_DOCTOR_ID_FK],
[PATIENT_DATE_OF_ADMIT],
[PATIENT_TIME_OF_ADMIT],
[PATIENT_REMARK]
)
VALUES
(
@patientId,
@patientGeneralHealth,
@patientRegularMedications,
@patientAllergyStatus,
@patientAllergies,
@patientPastSurgeryStatus,
@patientSurgery1,
@patientSurgery1Date,
@patientSurgery2,
@patientSurgery2Date,
@patientSurgery3,
@patientSurgery3Date,
@patientMedicalInsuranceStatus,
@patientMedicalInsuranceProvider,
@patientMedicalInsurancePolicyNumber,
@patientHeight,
@patientWeight,
@patientBloodGroup,
@patientAttendingDoctor,
@patientDateOfAdmit,
@patientTimeOfAdmit,
@patientRemark
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spRegisterPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterPatient]

@patientFirstName varchar(max),
@patientMiddleName varchar(max) = null,
@patientLastName varchar(max) = null,
@patientDOB datetime, 
@patientGender varchar(1), 
@patientMaritalStatus varchar(1) = null, 
@patientFatherName varchar(max) = null, 
@patientPrimaryAddress varchar(max),
@patientSecondaryAddress varchar(max) = null,
@patientPrimaryPhone varchar(max), 
@patientSecondaryPhone varchar(max) = null, 
@patientEmail varchar(max) = null,
@patientEmergencyContactName varchar(max) = null,
@patientEmergencyContactNumber varchar(max) = null, 
@patientOccupationType int = null, 
@patientOccupationName varchar(max) = null, 
@patientOccupationAddress varchar(max) = null, 
@patientMonthlyIncome varchar(max) = null, 
@patientReference int = null, 
@patientReferenceSourceId int = null, 
@patientPrimaryLanguage varchar(max) = null,
@patientFamilySize int = null, 
@patientRegisteredById int = null

AS

INSERT INTO PATIENT_MASTER_TABLE
(
[PATIENT_FIRST_NAME],
[PATIENT_MIDDLE_NAME],
[PATIENT_LAST_NAME],
[PATIENT_DOB],
[PATIENT_GENDER],
[PATIENT_MARITAL_STATUS],
[PATIENT_FATHER_NAME],
[PATIENT_PRIMARY_ADDRESS],
[PATIENT_SECONDARY_ADDRESS],
[PATIENT_PRIMARY_PHONE],
[PATIENT_SECONDARY_PHONE],
[PATIENT_EMAIL],
[PATIENT_EMERGENCY_CONTACT_NAME],
[PATIENT_EMERGENCY_CONTACT_NUMBER],
[PATIENT_OCCUPATION],
[PATIENT_OCCUPATION_NAME],
[PATIENT_OCCUPATION_ADDRESS],
[PATIENT_MONTHLY_INCOME],
[PATIENT_REFERENCE_FK],
[PATIENT_REFERENCE_SOURCE_ID_FK],
[PATIENT_PRIMARY_LANGUAGE],
[PATIENT_FAMILY_SIZE],
[PATIENT_REGISTRATION_DATE_TIME],
[PATIENT_REGISTERED_BY_ID]
)
VALUES
(
@patientFirstName ,
@patientMiddleName ,
@patientLastName ,
@patientDOB , 
@patientGender , 
@patientMaritalStatus , 
@patientFatherName , 
@patientPrimaryAddress ,
@patientSecondaryAddress ,
@patientPrimaryPhone , 
@patientSecondaryPhone , 
@patientEmail ,
@patientEmergencyContactName ,
@patientEmergencyContactNumber , 
@patientOccupationType , 
@patientOccupationName , 
@patientOccupationAddress , 
@patientMonthlyIncome , 
@patientReference , 
@patientReferenceSourceId , 
@patientPrimaryLanguage ,
@patientFamilySize ,
GETDATE(),
@patientRegisteredById
);

SELECT SCOPE_IDENTITY();
 
GO
/****** Object:  StoredProcedure [dbo].[spRegisterReceptionist]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spRegisterReceptionist]
@receptionistEmpId int,
@marks10 varchar(max),
@marks12 varchar(max)

AS

INSERT INTO RECEPTIONIST_MASTER_TABLE
(
[EMPLOYEE_ID_FK],
[RECEPTIONIST_MARKS_10],
[RECEPTIONIST_MARKS_12]
)
VALUES
(
@receptionistEmpId,
@marks10,
@marks12
);

SELECT SCOPE_IDENTITY();
GO
/****** Object:  StoredProcedure [dbo].[spSearchDoctor]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchDoctor]

@doctorName varchar(max)

AS

SELECT 
A.ID, 
(A.EMPLOYEE_FIRST_NAME + ' '  + ISNULL(A.EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(A.EMPLOYEE_LAST_NAME, '')) AS DOCTOR_NAME,
C.SPECIALITY AS DOCTOR_DEPARTMENT
FROM
EMPLOYEE_MASTER_TABLE A,
DOCTOR_MASTER_TABLE B,
DEPARTMENT_TABLE C
WHERE
(EMPLOYEE_FIRST_NAME LIKE '%' + @doctorName + '%' OR
EMPLOYEE_MIDDLE_NAME LIKE '%' + @doctorName + '%' OR
EMPLOYEE_LAST_NAME LIKE '%' + @doctorName + '%') AND
A.ID=B.EMPLOYEE_ID_FK AND
B.DOCTOR_DEPARTMENT_FK=C.ID;
GO
/****** Object:  StoredProcedure [dbo].[spSearchEmployeeByName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchEmployeeByName]

@empName varchar(max)

AS

SELECT 
ID, (EMPLOYEE_FIRST_NAME + ' ' + ISNULL(EMPLOYEE_MIDDLE_NAME, '') + ' ' + ISNULL(EMPLOYEE_LAST_NAME, '')) AS EMPLOYEE_NAME, EMPLOYEE_PRIMARY_PHONE
FROM
EMPLOYEE_MASTER_TABLE
WHERE
EMPLOYEE_FIRST_NAME LIKE '%' + @empName + '%' OR
EMPLOYEE_MIDDLE_NAME LIKE '%' + @empName + '%' OR
EMPLOYEE_LAST_NAME LIKE '%' + @empName + '%';
GO
/****** Object:  StoredProcedure [dbo].[spSearchIPDPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchIPDPatient]

@doctorId int,
@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
B.WARD_ID_FK,
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE, 
B.WARD_NUMBER, 
C.WARD_NAME, 
C.ID AS WARD_ID, 
CONVERT(VARCHAR(11), D.PATIENT_DATE_OF_ADMIT, 110) AS ADMIT_DATE
FROM
PATIENT_MASTER_TABLE A,
WARD_STATION_TABLE B,
WARD_TABLE C,
PATIENT_INDOOR_TABLE D
WHERE
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%') AND
D.PATIENT_ID_FK=A.ID AND
B.PATIENT_ID_FK=D.PATIENT_ID_FK AND
B.WARD_ID_FK=C.ID AND
D.PATIENT_ATTENDING_DOCTOR_ID_FK=@doctorId;

GO
/****** Object:  StoredProcedure [dbo].[spSearchOPDPatient]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchOPDPatient]

@patientName varchar(max)

AS

SELECT DISTINCT
A.ID, 
(A.PATIENT_FIRST_NAME + ' ' + ISNULL(A.PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(A.PATIENT_LAST_NAME, '')) AS PATIENT_NAME, 
A.PATIENT_PRIMARY_PHONE
FROM 
PATIENT_MASTER_TABLE A,
PATIENT_TYPE_TABLE B
WHERE 
(PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%') AND
B.PATIENT_ID_FK=A.ID AND
B.PATIENT_TYPE='OUT';
GO
/****** Object:  StoredProcedure [dbo].[spSearchPatientByName]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchPatientByName]

@patientName varchar(max)

AS

SELECT ID, (PATIENT_FIRST_NAME + ' ' + ISNULL(PATIENT_MIDDLE_NAME, '') + ' ' + ISNULL(PATIENT_LAST_NAME, '')) AS PATIENT_NAME, CONVERT(VARCHAR(110), PATIENT_DOB, 110) AS PATIENT_DOB, PATIENT_PRIMARY_PHONE
FROM
PATIENT_MASTER_TABLE
WHERE
PATIENT_FIRST_NAME LIKE '%' + @patientName + '%' OR
PATIENT_MIDDLE_NAME LIKE '%' + @patientName + '%' OR
PATIENT_LAST_NAME LIKE '%' + @patientName + '%';
GO
/****** Object:  StoredProcedure [dbo].[spSearchPatientByPhoneNumber]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSearchPatientByPhoneNumber]

@patientPhoneNumber varchar(max)

AS

SELECT A.ID, A.PATIENT_NAME, B.WARD_NAME, C.WARD_NUMBER
FROM
PATIENT_MASTER_TABLE A, WARD_TABLE B, WARD_STATION_TABLE C
WHERE
A.PATIENT_PHONE=@patientPhoneNumber AND 
A.ID=C.PATIENT_ID_FK AND 
B.ID=C.WARD_ID_FK;
GO
/****** Object:  StoredProcedure [dbo].[spSetEmployeeSchedule]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSetEmployeeSchedule]

@empId int,
@monSess1From datetime=null,
@monSess1To datetime=null,
@monSess2From datetime=null,
@monSess2To datetime=null,
@monSess3From datetime=null,
@monSess3To datetime=null,
@tueSess1From datetime=null,
@tueSess1To datetime=null,
@tueSess2From datetime=null,
@tueSess2To datetime=null,
@tueSess3From datetime=null,
@tueSess3To datetime=null,
@wedSess1From datetime=null,
@wedSess1To datetime=null,
@wedSess2From datetime=null,
@wedSess2To datetime=null,
@wedSess3From datetime=null,
@wedSess3To datetime=null,
@thuSess1From datetime=null,
@thuSess1To datetime=null,
@thuSess2From datetime=null,
@thuSess2To datetime=null,
@thuSess3From datetime=null,
@thuSess3To datetime=null,
@friSess1From datetime=null,
@friSess1To datetime=null,
@friSess2From datetime=null,
@friSess2To datetime=null,
@friSess3From datetime=null,
@friSess3To datetime=null,
@satSess1From datetime=null,
@satSess1To datetime=null,
@satSess2From datetime=null,
@satSess2To datetime=null,
@satSess3From datetime=null,
@satSess3To datetime=null,
@sunSess1From datetime=null,
@sunSess1To datetime=null,
@sunSess2From datetime=null,
@sunSess2To datetime=null,
@sunSess3From datetime=null,
@sunSess3To datetime=null

AS

INSERT INTO EMPLOYEE_SCHEDULE_TABLE
(
[EMPLOYEE_ID_FK],
[MON_SESS1_FROM],
[MON_SESS1_TO],
[MON_SESS2_FROM],
[MON_SESS2_TO],
[MON_SESS3_FROM],
[MON_SESS3_TO],
[TUE_SESS1_FROM],
[TUE_SESS1_TO],
[TUE_SESS2_FROM],
[TUE_SESS2_TO],
[TUE_SESS3_FROM],
[TUE_SESS3_TO],
[WED_SESS1_FROM],
[WED_SESS1_TO],
[WED_SESS2_FROM],
[WED_SESS2_TO],
[WED_SESS3_FROM],
[WED_SESS3_TO],
[THU_SESS1_FROM],
[THU_SESS1_TO],
[THU_SESS2_FROM],
[THU_SESS2_TO],
[THU_SESS3_FROM],
[THU_SESS3_TO],
[FRI_SESS1_FROM],
[FRI_SESS1_TO],
[FRI_SESS2_FROM],
[FRI_SESS2_TO],
[FRI_SESS3_FROM],
[FRI_SESS3_TO],
[SAT_SESS1_FROM],
[SAT_SESS1_TO],
[SAT_SESS2_FROM],
[SAT_SESS2_TO],
[SAT_SESS3_FROM],
[SAT_SESS3_TO],
[SUN_SESS1_FROM],
[SUN_SESS1_TO],
[SUN_SESS2_FROM],
[SUN_SESS2_TO],
[SUN_SESS3_FROM],
[SUN_SESS3_TO]
)
VALUES
(
@empId,
@monSess1From,
@monSess1To, 
@monSess2From, 
@monSess2To,
@monSess3From,
@monSess3To,
@tueSess1From,
@tueSess1To,
@tueSess2From,
@tueSess2To,
@tueSess3From,
@tueSess3To,
@wedSess1From,
@wedSess1To,
@wedSess2From,
@wedSess2To,
@wedSess3From,
@wedSess3To,
@thuSess1From,
@thuSess1To,
@thuSess2From,
@thuSess2To,
@thuSess3From,
@thuSess3To,
@friSess1From,
@friSess1To,
@friSess2From,
@friSess2To,
@friSess3From,
@friSess3To,
@satSess1From,
@satSess1To,
@satSess2From,
@satSess2To,
@satSess3From,
@satSess3To,
@sunSess1From,
@sunSess1To,
@sunSess2From,
@sunSess2To,
@sunSess3From,
@sunSess3To
);
GO
/****** Object:  StoredProcedure [dbo].[spSetWardCharge]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spSetWardCharge]

@suiteWardCharge varchar(max),
@deluxeWardCharge varchar(max),
@specialAcWardCharge varchar(max),
@semiWardPrivate varchar(max),
@generalWardCharge varchar(max)

AS

UPDATE WARD_TABLE
SET WARD_CHARGE = CASE ID
WHEN 1 THEN @suiteWardCharge
WHEN 3 THEN @deluxeWardCharge
WHEN 4 THEN @specialAcWardCharge
WHEN 5 THEN @semiWardPrivate
WHEN 6 THEN @generalWardCharge
END
WHERE ID IN (1,3,4,5,6);

GO
/****** Object:  StoredProcedure [dbo].[spUpdatePatientType]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spUpdatePatientType]

@patientId int,
@patientType varchar(3)

AS

UPDATE 
PATIENT_TYPE_TABLE
SET
PATIENT_ID_FK=@patientId,
PATIENT_TYPE=@patientType
WHERE
PATIENT_ID_FK=@patientId;

GO
/****** Object:  StoredProcedure [dbo].[spUpdateReminder]    Script Date: 26-Feb-15 1:38:03 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[spUpdateReminder]

@empId int,
@reminderId int,
@reminderTitle varchar(max),
@reminderDetails varchar(max)

AS

UPDATE REMINDER_TABLE
SET
REMINDER_TITLE=@reminderTitle,
REMINDER_DETAILS=@reminderDetails
WHERE
ID=@reminderId AND
EMPLOYEE_ID_FK=@empId;
GO
USE [master]
GO
ALTER DATABASE [HMS] SET  READ_WRITE 
GO
